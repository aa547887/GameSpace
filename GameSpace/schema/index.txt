

<!DOCTYPE html>
<html lang="zh-Hant">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>GameSpace｜合併最終版 v2.3（玻璃風＋彩色看板＋強化排行＋置頂＋查看更多＋我的史萊姆）</title>
  <style>
    :root{
      --bg:#eef3f8; --bg2:#ffffff; --ink:#1f2937; --muted:#64748b; --line:#e5e7eb;
      --surface:rgba(255,255,255,.75); --glass:rgba(255,255,255,.45);
      --accent:#7557ff; --accent-2:#34d2ff; --accent-3:#22c55e;
      --radius:18px; --radius-sm:12px; --shadow:0 18px 40px rgba(17,24,39,.12);
      --blur:14px;
      /* 排行榜配色（參考檔風格） */
      --ok:#22c55e; --down:#ff6b6b; --flat:#9aa8bf;
      --gold:#FFD700; --silver:#C0C0C0; --bronze:#CD7F32;
      --goldA:rgba(255,215,0,.18); --silverA:rgba(192,192,192,.18); --bronzeA:rgba(205,127,50,.18);
    }
    body.dark{
      --bg:#0c111b; --bg2:#0a0f18; --ink:#e5edff; --muted:#9fb1c9; --line:#1e2b43;
      --surface:rgba(22,30,48,.65); --glass:rgba(18,24,39,.50);
      --shadow:0 18px 42px rgba(0,0,0,.35);
    }
    body.compact{ --radius:14px; --radius-sm:10px }
    *{box-sizing:border-box} html,body{height:100%}
    body{
      margin:0; color:var(--ink); font:16px/1.65 system-ui,-apple-system,"Segoe UI",Roboto,"Noto Sans TC","PingFang TC","Microsoft JhengHei",sans-serif;
      background:
        radial-gradient(900px 500px at -10% -10%, rgba(117,87,255,.10), transparent 60%),
        radial-gradient(800px 460px at 110% 10%, rgba(52,210,255,.10), transparent 50%),
        linear-gradient(180deg, var(--bg), var(--bg2));
    }
    a{color:inherit; text-decoration:none}
    .wrap{max-width:1380px; margin:0 auto; padding:0 16px}

    /* AppBar */
    header.appbar{position:sticky; top:0; z-index:50; backdrop-filter:saturate(140%) blur(var(--blur)); background:var(--glass); border-bottom:1px solid var(--line)}
    .bar{display:flex; align-items:center; gap:12px; padding:10px 0}
    .logo{display:flex; align-items:center; gap:10px; font-weight:900}
    .logo-badge{width:36px; height:36px; border-radius:10px; background:linear-gradient(135deg,var(--accent), var(--accent-2)); color:#fff; display:grid; place-items:center; box-shadow:var(--shadow)}
    .search{flex:1; display:flex; gap:8px; background:var(--surface); border:1px solid var(--line); border-radius:12px; padding:8px 10px}
    .search input{flex:1; background:transparent; border:0; outline:0; color:inherit}
    .main-nav{display:flex; gap:8px; flex-wrap:wrap}
    .pill{display:inline-flex; align-items:center; gap:6px; border:1px solid var(--line); background:var(--surface); padding:8px 12px; border-radius:999px; font-weight:700}
    .pill.on{background:linear-gradient(90deg,#3b82f6,#a78bfa); color:#fff; border-color:transparent}
    .top-actions{display:flex; gap:8px; align-items:center}
    .btn{border:1px solid var(--line); background:var(--surface); padding:8px 12px; border-radius:12px; cursor:pointer}
    .btn.primary{border:0; background:linear-gradient(135deg,var(--accent),#3b82f6); color:#fff; box-shadow:var(--shadow)}
    .btn.link{background:transparent; border:1px dashed var(--line)}
    .switch{display:flex; align-items:center; gap:6px; font-size:13px}
    .dot{width:16px; height:16px; border-radius:50%; border:1px solid var(--line); cursor:pointer}
    .dot.c1{background:#7557ff}.dot.c2{background:#34d2ff}.dot.c3{background:#22c55e}

    /* Tiles（彩色看板） */
    .tiles{padding:16px 0}
    .grid-tiles{display:grid; gap:12px; grid-template-columns:repeat(6, minmax(0,1fr))}
    @media (max-width:1100px){.grid-tiles{grid-template-columns:repeat(4, minmax(0,1fr))}}
    @media (max-width:740px){.grid-tiles{grid-template-columns:repeat(2, minmax(0,1fr))}}
    .tile{position:relative; min-height:120px; border-radius:16px; padding:14px; overflow:hidden; display:flex; flex-direction:column; justify-content:space-between; cursor:pointer; background:var(--glass); border:1px solid var(--line); backdrop-filter:blur(var(--blur)); transition:transform .16s ease, box-shadow .16s ease, filter .2s ease; box-shadow:var(--shadow)}
    .tile:hover{transform:translateY(-3px) scale(1.01)}
    .tile .name{font-weight:900}
    .tile .meta{color:var(--muted); font-size:12px}
    .mini{background:rgba(255,255,255,.65); padding:2px 8px; border-radius:999px; font-size:12px; border:1px solid var(--line)}
    body.dark .mini{background:rgba(0,0,0,.25); color:#e5edff}
    /* 彩色漸層（看板） */
    .tile.colorful:nth-child(1){background:linear-gradient(135deg,#4f46e5,#22d3ee)}
    .tile.colorful:nth-child(2){background:linear-gradient(135deg,#f43f5e,#f59e0b)}
    .tile.colorful:nth-child(3){background:linear-gradient(135deg,#22c55e,#16a34a)}
    .tile.colorful:nth-child(4){background:linear-gradient(135deg,#8b5cf6,#06b6d4)}
    .tile.colorful:nth-child(5){background:linear-gradient(135deg,#f97316,#ef4444)}
    .tile.colorful:nth-child(6){background:linear-gradient(135deg,#06b6d4,#3b82f6)}
    .tile.colorful .name,.tile.colorful .meta,.tile.colorful .mini{color:#fff}
    .tile.colorful .mini{background:rgba(255,255,255,.25); border-color:rgba(255,255,255,.35)}

    /* Hot（橫向） */
    .hot{background:var(--glass); border:1px solid var(--line); border-radius:16px; padding:14px; backdrop-filter:blur(var(--blur)); box-shadow:var(--shadow)}
    .head{display:flex; align-items:center; gap:10px; margin-bottom:10px}
    .kicker{font-size:12px; letter-spacing:.12em; color:#6366f1}
    .scroller{display:flex; gap:12px; overflow:auto; scroll-snap-type:x mandatory; padding-bottom:6px}
    .card{min-width:280px; background:var(--surface); border:1px solid var(--line); border-radius:16px; padding:12px; scroll-snap-align:start; transition:transform .16s ease, box-shadow .16s ease}
    .card:hover{transform:translateY(-3px) scale(1.01); box-shadow:var(--shadow)}

    /* Main layout */
    main{margin:16px 0 28px}
    .layout{display:grid; grid-template-columns:1fr 360px; gap:16px}
    @media (max-width:980px){.layout{grid-template-columns:1fr}}

    .panel{background:var(--surface); border:1px solid var(--line); border-radius:16px; box-shadow:var(--shadow); padding:14px; backdrop-filter:blur(var(--blur))}
    .panel .hd{display:flex; align-items:center; gap:10px; margin-bottom:10px}
    .panel .title{font-weight:900}
    .seg{display:inline-flex; border:1px solid var(--line); border-radius:999px; overflow:hidden; margin-left:auto}
    .seg button{background:transparent; border:0; color:var(--muted); padding:6px 10px; cursor:pointer}
    .seg .on{background:#1f7ae0; color:#fff}

    .feed{display:grid; gap:10px}
    .row{display:grid; grid-template-columns:auto 1fr auto; gap:10px; align-items:center; border:1px solid var(--line); border-radius:14px; padding:10px; background:var(--bg2); transition:transform .16s ease, box-shadow .16s ease}
    .row:hover{transform:translateY(-3px) scale(1.01); box-shadow:var(--shadow)}
    .av{width:40px; height:40px; border-radius:12px; background:linear-gradient(135deg,#bae6fd,#e9d5ff); display:grid; place-items:center; font-weight:900; color:#334155}
    .meta{display:flex; gap:8px; flex-wrap:wrap; color:var(--muted); font-size:13px; margin-top:2px}
    .chip{border:1px solid var(--line); padding:2px 8px; border-radius:999px; background:var(--surface)}
    .ghost{border:1px solid var(--line); background:var(--surface); border-radius:10px; padding:6px 10px}

    /* 置頂區 */
    .pinned{border:2px dashed #c4b5fd; background:rgba(196,181,253,.15); padding:10px; border-radius:12px}
    .pinned .row{background:transparent}

    /* 右側：原有黏性（保留）、個別卡片可再 sticky */
    .right{align-self:start; position:sticky; top:calc(50vh - 320px)}
    .stack{display:flex; flex-direction:column; gap:16px}

    /* 跑馬燈（加速） */
    .ticker{position:relative; overflow:hidden; border:1px solid var(--line); background:var(--surface); border-radius:12px}
    .ticker .track{display:flex; gap:32px; padding:10px 12px; white-space:nowrap; animation:ticker 10s linear infinite}
    @keyframes ticker{0%{transform:translateX(0)}100%{transform:translateX(-50%)}}

    /* 排行榜（通用） */
    .list{display:flex; flex-direction:column; gap:8px}
    .rrow{position:relative; display:grid; grid-template-columns:40px 1fr auto; gap:10px; align-items:center; border:1px solid var(--line); background:var(--bg2); border-radius:12px; padding:10px; overflow:hidden}
    .rank{font-weight:900; text-align:center}
    .delta{text-align:right; min-width:64px; font-weight:800}
    .up{color:var(--ok)} .down{color:var(--down)} .flat{color:var(--flat)}
    .rrow.top::before{content:""; position:absolute; inset:0; pointer-events:none; z-index:0; opacity:.9; filter:blur(14px)}
    .rrow.top1::before{background:linear-gradient(90deg,var(--goldA),transparent 60%)}
    .rrow.top2::before{background:linear-gradient(90deg,var(--silverA),transparent 60%)}
    .rrow.top3::before{background:linear-gradient(90deg,var(--bronzeA),transparent 60%)}
    .rrow.top1 .rank, .rrow.top1 .title-2{color:var(--gold)}
    .rrow.top2 .rank, .rrow.top2 .title-2{color:var(--silver)}
    .rrow.top3 .rank, .rrow.top3 .title-2{color:var(--bronze)}
    .rrow > *{position:relative; z-index:1}

    .pulse{position:relative; overflow:hidden}
    .pulse::after{content:""; position:absolute; inset:-3px; border-radius:calc(var(--radius) + 6px); background:linear-gradient(90deg,var(--accent),var(--accent-2),var(--accent)); filter:blur(10px); opacity:.16; z-index:0; animation:pulseGlow 2.8s linear infinite}
    .pulse > *{position:relative; z-index:1}
    @keyframes pulseGlow{0%{transform:translateX(-20%)}50%{opacity:.26}100%{transform:translateX(20%)}}

    /* 類別排行網格（加寬） */
    #cats2.grid-tiles{grid-template-columns:repeat(3,minmax(0,1fr))}
    @media (max-width:1100px){#cats2.grid-tiles{grid-template-columns:repeat(2,minmax(0,1fr))}}
    @media (max-width:740px){#cats2.grid-tiles{grid-template-columns:repeat(1,minmax(0,1fr))}}
    #cats2 .tile{min-height:auto}

    /* Modal（美化） */
    .modal{position:fixed; inset:0; background:rgba(8,12,20,.85); display:none; align-items:center; justify-content:center; padding:24px; z-index:9999}
    .modal.show{display:flex}
    .modal .panel{position:relative; background:var(--surface); border:1px solid var(--line); border-radius:20px; max-width:980px; width:100%; max-height:86vh; overflow:auto; padding:18px 18px 22px; display:flex; flex-direction:column; gap:12px; backdrop-filter:blur(var(--blur))}
    .mh{display:flex; align-items:center; gap:10px; margin-bottom:6px}
    .mh .subtitle{color:var(--muted); font-size:13px}
    .closeX{position:absolute; top:12px; right:12px; border:1px solid var(--line); background:var(--surface); border-radius:50%; width:36px; height:36px; cursor:pointer}
    .modal .list .rrow{background:var(--surface)}
    .modal .list .rrow.top1::before,
    .modal .list .rrow.top2::before,
    .modal .list .rrow.top3::before{opacity:1; filter:blur(14px)}

    footer{color:var(--muted); text-align:center; padding:20px 0; border-top:1px solid var(--line)}

    /* ====== 右側 Sticky：我的史萊姆卡片（你提供的樣式，微調類名避免衝突） ====== */
    .gs-right-sticky{ position: sticky; top:16px; }
    .gs-pet-card{
      font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;
      background:#1f2430; color:#e9ecf1; border:1px solid #0006; border-radius:12px;
      box-shadow:0 8px 24px #0004, inset 0 1px 0 #fff1; padding:12px; width:100%;
    }
    .gs-pet-head{ display:flex; align-items:center; justify-content:space-between; margin-bottom:8px; }
    .gs-pet-title{ font-weight:700; letter-spacing:.5px; }
    .gs-sub{ color:#aeb6d9; }
    .gs-coins{ background:#262d3d; border:1px solid #0006; padding:4px 8px; border-radius:999px; }
    .gs-pet-canvas-wrap{ display:flex; justify-content:center; margin:6px 0 10px; }
    #gs-pet-canvas{ image-rendering: pixelated; width:160px; height:160px; background:#9ee37d; border:1px solid #0006; border-radius:8px; }
    .gs-stats{ display:grid; grid-template-columns:1fr; gap:6px; margin-bottom:8px; }
    .gs-stat{ display:grid; grid-template-columns:auto 1fr auto; gap:8px; align-items:center; }
    .gs-bar{ height:10px; background:#2b3142; border:1px solid #0008; border-radius:6px; overflow:hidden; }
    .gs-bar i{ display:block; height:100%; width:0%; background:linear-gradient(90deg,#6de38d,#35c47e); transition:width .25s; }
    .gs-bar.warn i{ background:linear-gradient(90deg,#ffd159,#ffba4b); }
    .gs-bar.bad i{ background:linear-gradient(90deg,#ff7b72,#ff5d6a); }
    .gs-actions{ display:grid; grid-template-columns:repeat(5,1fr); gap:6px; margin-bottom:8px; }
    .gs-actions button{ background:#2e3440; color:#fff; border:1px solid #0006; border-radius:10px; padding:8px 6px; cursor:pointer; }
    .gs-actions .gs-accent{ background:#5661ff; }
    .gs-log{ list-style:none; padding:8px; margin:0; max-height:120px; overflow:auto; background:#262d3d; border:1px solid #0006; border-radius:10px; font-size:12px; color:#c7d0ff; }
    .gs-log li{ margin:0 0 6px; }
    .gs-log .warn{ color:#ffe08a; }
    .gs-log .bad{ color:#ff9b93; }
  </style>
</head>
<body>
  <!-- AppBar -->
  <header class="appbar">
    <div class="wrap bar">
      <a class="logo" href="#"><span class="logo-badge">GS</span><span>GameSpace</span></a>
      <form class="search" onsubmit="event.preventDefault(); doSearch2();">
        <input id="q2" type="search" placeholder="搜尋文章 / 分區 / 標籤…" aria-label="搜尋"/>
        <button type="submit" class="btn">搜尋</button>
      </form>
      <nav class="main-nav" aria-label="主導覽">
        <a class="pill" href="#profile">個人中心</a>
        <a class="pill" href="#checkin">每日簽到</a>
        <a class="pill on" href="#forum">論壇</a>
        <a class="pill" href="#slime">我的史萊姆</a>
        <a class="pill" href="#shop">官方商城</a>
        <a class="pill" href="#market">玩家市集</a>
        <a class="pill" href="#ranks">排行榜</a>
        <a class="pill" href="#match">約玩配對</a>
      </nav>
      <div class="top-actions">
        <label class="switch"><input id="t-dark" type="checkbox"/> 深色</label>
        <label class="switch"><input id="t-density" type="checkbox"/> 緊湊</label>
        <div class="switch" title="主色">
          <span class="dot c1" data-accent="#7557ff"></span>
          <span class="dot c2" data-accent="#34d2ff"></span>
          <span class="dot c3" data-accent="#22c55e"></span>
        </div>
        <button class="btn primary" id="btnNew2">＋ 發表主題</button>
      </div>
    </div>
  </header>

  <!-- 看板 Tiles -->
  <section class="wrap tiles" aria-label="看板彩色小卡">
    <div class="grid-tiles" id="tileGrid2"></div>
  </section>

  <!-- Hot Threads -->
  <section class="wrap">
    <article class="hot">
      <div class="head"><span class="kicker">Hot Threads</span><strong>熱門精選</strong></div>
      <div class="scroller" id="hotScroller2"></div>
    </article>
  </section>

  <!-- Main -->
  <main class="wrap layout" id="forum">
    <!-- 中欄：文章 Feed -->
    <section class="panel">
      <div class="hd">
        <div class="title">最新文章</div>
        <span id="feedCount2" class="muted" style="margin-left:8px"></span>
        <div class="seg" role="tablist" aria-label="快速篩選">
          <button id="all2" class="on" aria-selected="true">全部</button>
          <button id="lol2">LOL</button>
          <button id="steam2">Steam</button>
          <button id="mobile2">手遊</button>
          <button id="genshin2">原神</button>
          <button id="mood2">心情板</button>
        </div>
      </div>

      <!-- 置頂區 -->
      <div id="pinned" class="pinned" aria-label="置頂文章"></div>

      <div class="feed" id="feed2"></div>

      <!-- 改為查看更多按鈕（跳轉論壇主頁） -->
      <div style="text-align:center;margin-top:12px">
        <a class="btn primary" href="forum.html" id="btnMoreFeed">查看更多</a>
      </div>
    </section>

    <!-- 右欄 -->
    <aside class="right">
      <div class="stack">

        <!-- ====== 右側 Sticky：我的史萊姆卡片 ====== -->
        <aside class="gs-right-sticky">
          <div class="gs-pet-card" id="gs-pet-card">
            <header class="gs-pet-head">
              <div>
                <div class="gs-pet-title">我的史萊姆</div>
                <small class="gs-sub">
                  <span id="gs-pet-name">—</span> · Lv.<b id="gs-pet-lv">1</b> · XP <b id="gs-pet-xp">0</b>/<b id="gs-pet-xpmax">50</b>
                </small>
              </div>
              <div class="gs-coins">💰 <b id="gs-coins">0</b></div>
            </header>

            <div class="gs-pet-canvas-wrap">
              <canvas id="gs-pet-canvas" width="120" height="120"></canvas>
            </div>

            <div class="gs-stats">
              <div class="gs-stat"><label>飢餓</label><div class="gs-bar"><i id="bar-hunger"></i></div><span id="txt-hunger">0</span></div>
              <div class="gs-stat"><label>心情</label><div class="gs-bar"><i id="bar-mood"></i></div><span id="txt-mood">0</span></div>
              <div class="gs-stat"><label>體力</label><div class="gs-bar"><i id="bar-energy"></i></div><span id="txt-energy">0</span></div>
              <div class="gs-stat"><label>清潔</label><div class="gs-bar"><i id="bar-clean"></i></div><span id="txt-clean">0</span></div>
              <div class="gs-stat"><label>健康</label><div class="gs-bar"><i id="bar-health"></i></div><span id="txt-health">0</span></div>
            </div>

            <div class="gs-actions">
              <button data-act="Feed">餵食</button>
              <button data-act="Bath">洗澡</button>
              <button data-act="Play">玩耍</button>
              <button data-act="Rest">休息</button>
              <button class="gs-accent" id="gs-adv">出發冒險（每日 3 次）</button>
            </div>

            <ul class="gs-log" id="gs-log"></ul>
          </div>
        </aside>
        <!-- ====== /我的史萊姆卡片 ====== -->

        <article class="ticker" aria-label="公告跑馬燈"><div class="track" id="ticker2"></div></article>

        <article class="panel pulse">
          <div class="hd">
            <div class="title">跨平台熱門（近 7 / 30 天）</div>
            <div class="seg" style="margin-left:auto">
              <button id="mix7b" class="on">近 7 天</button>
              <button id="mix30b">近 30 天</button>
            </div>
          </div>
          <div id="mixList2" class="list"></div>
          <div style="display:flex;justify-content:flex-end;margin-top:8px">
            <button class="btn" id="allMix2">查看完整綜合排行</button>
          </div>
        </article>

        <article class="panel">
          <div class="hd"><div class="title">熱門標籤</div></div>
          <div class="meta" id="hotTags2" style="flex-wrap:wrap"></div>
        </article>

        <article class="panel">
          <div class="hd"><div class="title">本日人氣作者</div></div>
          <div id="authors2" class="list"></div>
        </article>
      </div>
    </aside>
  </main>

  <!-- 類別排行（注意：已移除 moba 類別） -->
  <section class="wrap" id="ranks" style="margin-top:8px">
    <article class="panel">
      <div class="hd">
        <div class="title">各類遊戲分區熱度排行</div>
        <div class="seg" style="margin-left:auto">
          <button class="on" id="cats7b">近 7 天</button>
          <button id="cats30b">近 30 天</button>
        </div>
      </div>
      <div class="grid-tiles" id="cats2"></div>
      <div style="display:flex;justify-content:flex-end;margin-top:8px">
        <a class="btn primary" id="allCats2" href="ranks.html">查看更多</a>
      </div>
    </article>
  </section>

  <!-- 浮動發文（行動） -->
  <button class="compose" id="fab2">＋ 發表主題</button>

  <!-- Modal -->
  <div class="modal" id="modal2">
    <div class="panel" id="panel2">
      <button class="closeX" id="x2" aria-label="關閉">×</button>
      <div class="mh">
        <strong id="mtitle2">—</strong>
        <span class="subtitle" id="msub2"></span>
      </div>
      <div id="mlist2" class="list" style="min-height:0;"></div>
    </div>
  </div>

  <footer class="wrap">© 2025 GameSpace — 假資料示範頁 v2.3（極簡玻璃風，無後端）</footer>

  <script>
    /* 假資料 */
    const BOARDS2 = [
      {key:'lol', name:'英雄聯盟', intro:'版本情報、電競賽事、教學攻略'},
      {key:'genshin', name:'原神', intro:'角色配隊、抽卡心得、世界探索'},
      {key:'steam', name:'Steam 綜合', intro:'促銷情報、遊戲心得、實況討論'},
      {key:'mobile', name:'手機遊戲', intro:'Android / iOS 手遊討論'},
      {key:'general', name:'綜合討論', intro:'硬體外設、雜談灌水、求助問答'},
      {key:'mood', name:'心情板', intro:'日常、告白、碎碎念、抱怨'}
    ];
    const BULLETINS2 = [
      '【活動】投稿最佳攻略贏鍵盤滑鼠組',
      '【公告】站務規範更新，請勿張貼攻擊性言論',
      '【社群】本月達標 2,000 則優質回覆，感謝大家！',
      '【徵稿】實況主合作專題，開放報名',
      '【修復】行動端卡片重疊在 v2 已修正'
    ];
    const HOT2 = Array.from({length:16}).map((_,i)=>({
      t:`焦點話題 #${i+1}｜大改版重點彙整`,
      m:'包含角色強度與裝備配置、關卡練度門檻、常見 QA…',
      tag:i%2?'情報':'攻略',
      board:['LOL','原神','Steam','手機'][i%4]
    }));

    /* 熱門標籤 / 本日人氣作者（擴充版） */
    const TAGS2_BASE = ['#新手求助','#攻略','#情報','#閒聊','#活動','#同人','#抽卡','#更新','#改版','#Bug','#心得','#PVP',
      '#PVE','#模擬器','#競速','#MOD','#版務','#公告','#深度解析','#開箱','#評測','#配裝','#地圖','#速刷','#角色','#培養',
      '#召喚','#副本','#社群','#實況剪輯','#梗圖','#密技','#省電','#設定','#懶人包','#問答','#心得文','#裝備','#天賦','#流派'];
    const TAGS2 = Array.from({length: (Math.floor(Math.random()*5)+24)}).map((_,i)=>{
      const t = TAGS2_BASE[i % TAGS2_BASE.length];
      return { t, c: Math.floor(Math.random()*316)+5 };
    });
    const AUTHORS2 = Array.from({length: 12}).map((_,i)=>{
      const names = ['紙箱研究室','夜行貓','璃月曦光','阿傑攻略','老王不打野','低調小廢物','Nia','Klein','Nova','Aster','小K','神樂','阿筆','Rin','Zed'];
      const name = names[i % names.length] + (i>10 ? ('_' + (i-10)) : '');
      return { name, posts: Math.floor(Math.random()*15)+4, likes: Math.floor(Math.random()*361)+60 };
    });

    const USERS2 = ['Miko','Gary','Kira','Lulu','阿筆','神樂','小K','Jerry','Nia','Zed','Klein','Rin','Nova','Aster'];
    const TITLES2 = [
      '平民向武器替代表（附表格）','改版後坦克裝推薦','首抽角色 CP 分析','實測 120 抽紀錄','打野動線更新（S 賽季）','速刷日常路線（含地圖）','Steam 夏促清單精選','本周活動懶人包','入門三天上手指南','冷門角機體解構','手機省電設定大全'
    ];
    function r(a,b){return Math.floor(Math.random()*(b-a+1))+a}
    function pick(arr){return arr[r(0,arr.length-1)]}

    const PINNED = Array.from({length:3}).map((_,i)=>({
      title:`【置頂】站務公告與精華整理 #${i+1}`,
      author: 'Admin',
      board: 'general',
      likes: r(30,300),
      replies: r(10,150),
      views: r(500,6000),
      tags: ['#公告','#精華'],
      minsAgo: r(5,120)
    }));
    const POSTS2 = Array.from({length:120}).map((_,i)=>{
      const board = pick(BOARDS2.map(b=>b.key));
      const title = pick(TITLES2) + (Math.random()<0.22? '（含數據圖表）':'' );
      const author = pick(USERS2);
      const likes = r(0,1200); const replies = r(0,520); const views = likes*3 + r(0,300);
      const tags = Array.from({length:r(1,3)}).map(()=>pick(TAGS2_BASE));
      const minsAgo = r(2, 60*48);
      return {id:i+1, board, title, author, likes, replies, views, tags, minsAgo};
    });
   /* 綜合排行 */
    const MIX7b = [
      {name:'Elden Ring: Shadow', delta:+3},
      {name:'Honkai: Star Rail', delta:+1},
      {name:'Genshin Impact', delta:-1},
      {name:'Valorant', delta:+2},
      {name:'Monster Hunter Now', delta:+2},
      {name:'League of Legends', delta:+1},
      {name:"Baldur's Gate 3", delta:-2},
      {name:'PUBG: BATTLEGROUNDS', delta:-1},
      {name:'Fortnite', delta:+1},
      {name:'Minecraft', delta:+1}
    ];
    const MIX30b = [
      {name:'League of Legends', delta:+2},
      {name:'Genshin Impact', delta:0},
      {name:'Honkai: Star Rail', delta:+2},
      {name:'Elden Ring: Shadow', delta:+3},
      {name:'Apex Legends', delta:-1},
      {name:'Call of Duty', delta:+1},
      {name:'PUBG: BATTLEGROUNDS', delta:-2},
      {name:'Valorant', delta:+1},
      {name:'Monster Hunter Now', delta:+1},
      {name:'Stardew Valley', delta:+1},
      {name:'Helldivers 2', delta:-1},
      {name:'Fortnite', delta:-1},
      {name:'Clash of Clans', delta:+1},
      {name:"Baldur's Gate 3", delta:-2},
      {name:'Overwatch 2', delta:-1}
    ];

    /* 類別排行（移除 moba） */
    const CATS7 = {
      action:['ELDEN RING','Monster Hunter Now','Helldivers 2','Fortnite','Sekiro'],
      rpg:["Genshin Impact","Baldur's Gate 3",'Honkai: Star Rail','Octopath II','Dragon Quest XI'],
      indie:['Hades II','Stardew Valley','Vampire Survivors','Dave the Diver','Hollow Knight'],
      mobile:['Clash of Clans','Arknights','FGO','NIKKE','Uma Musume']
    };
    const CATS30 = {
      action:['Monster Hunter Now','ELDEN RING','Fortnite','Helldivers 2','Armored Core VI'],
      rpg:['Honkai: Star Rail',"Genshin Impact","Baldur's Gate 3",'Starfield','Persona 5 Royal'],
      indie:['Stardew Valley','Hades II','Hollow Knight','Celeste','RimWorld'],
      mobile:['Clash of Clans','NIKKE','Arknights','FGO','Genshin Impact (Mobile)']
    };

    // DOM 參照
    const tileGrid2 = document.getElementById('tileGrid2');
    const hotScroller2 = document.getElementById('hotScroller2');
    const feed2 = document.getElementById('feed2');
    const feedCount2 = document.getElementById('feedCount2');
    const pinnedEl = document.getElementById('pinned');
    const ticker2 = document.getElementById('ticker2');
    const mixList2 = document.getElementById('mixList2');
    const modal2 = document.getElementById('modal2');
    const mlist2 = document.getElementById('mlist2');
    const mtitle2 = document.getElementById('mtitle2');
    const msub2 = document.getElementById('msub2');

    /* Tiles */
    function initTiles2(){
      tileGrid2.innerHTML = BOARDS2.map((b,i)=>`
        <a class="tile colorful" href="#" data-board="${b.key}">
          <div class="name">${b.name}</div>
          <div class="meta">${b.intro}</div>
          <div style="display:flex; gap:6px; flex-wrap:wrap; margin-top:6px">
            <span class="mini">今日新貼 ${r(6,40)}</span>
            <span class="mini">活躍 ${r(40,230)}</span>
          </div>
        </a>
      `).join('');
      tileGrid2.querySelectorAll('.tile').forEach(el=>{
        el.addEventListener('click', e=>{ e.preventDefault(); filter2(el.dataset.board); });
      });
    }

    /* Hot */
    function initHot2(){
      hotScroller2.innerHTML = HOT2.map(h=>`
        <article class="card">
          <div style="font-weight:900">${h.t}</div>
          <div style="color:var(--muted); font-size:13px">${h.m}</div>
          <div style="display:flex; gap:8px; margin-top:8px">
            <span class="chip">${h.board}</span>
            <span class="chip">${h.tag}</span>
          </div>
        </article>
      `).join('');
    }

    /* Ticker */
    function initTicker2(){
      const twice = BULLETINS2.concat(BULLETINS2);
      ticker2.innerHTML = twice.map(t=>`<span>🔔 ${t}</span>`).join('<span>·</span>');
    }

    /* Feed */
    let cur2 = 'all';
    function ago2(min){ if(min<60) return `${min} 分鐘前`; const h=Math.floor(min/60); const r=min%60; return `${h} 小時 ${r} 分鐘前`; }
    function renderPinned(){
      pinnedEl.innerHTML = PINNED.map(p=>`
        <article class="row">
          <div class="av">📌</div>
          <div>
            <div style="font-weight:900">${p.title}</div>
            <div class="meta">
              <span>@${p.author}</span><span>｜</span>
              <span>分區：<strong>${BOARDS2.find(b=>b.key===p.board).name}</strong></span><span>｜</span>
              <span>${ago2(p.minsAgo)}</span>
              ${p.tags.map(t=>`<span class="chip">${t}</span>`).join('')}
            </div>
          </div>
          <div style="display:flex; gap:8px">
            <span class="ghost">❤️ ${p.likes}</span>
            <span class="ghost">💬 ${p.replies}</span>
            <span class="ghost">👁️ ${p.views}</span>
          </div>
        </article>
      `).join('');
    }
    function render2(){
      feed2.innerHTML='';
      const list = POSTS2.filter(x=> cur2==='all' ? true : x.board===cur2).slice(0,12);
      list.forEach(p=>{
        const el = document.createElement('article'); el.className='row';
        el.innerHTML = `
          <div class="av">${p.author[0].toUpperCase()}</div>
          <div>
            <div style="font-weight:900">${p.title}</div>
            <div class="meta">
              <span>@${p.author}</span>
              <span>｜</span>
              <span>分區：<strong>${BOARDS2.find(b=>b.key===p.board).name}</strong></span>
              <span>｜</span>
              <span>${ago2(p.minsAgo)}</span>
              ${p.tags.map(t=>`<span class="chip">${t}</span>`).join('')}
            </div>
          </div>
          <div style="display:flex; gap:8px">
            <span class="ghost">❤️ ${p.likes}</span>
            <span class="ghost">💬 ${p.replies}</span>
            <span class="ghost">👁️ ${p.views}</span>
          </div>`;
        feed2.appendChild(el);
      });

feedCount2.textContent = `顯示 ${Math.min(12, POSTS2.length)} / ${POSTS2.length} 篇`;
    }
    function filter2(key){
      cur2 = key==='all' ? 'all' : key;
      render2();
      window.scrollTo({top: document.querySelector('.layout').offsetTop - 60, behavior:'smooth'});
      ['all2','lol2','steam2','mobile2','genshin2','mood2'].forEach(id=> document.getElementById(id).classList.remove('on'));
      const map = { all:'all2', lol:'lol2', steam:'steam2', mobile:'mobile2', genshin:'genshin2', mood:'mood2' };
      const btn = document.getElementById(map[cur2]||'all2'); if(btn) btn.classList.add('on');
    }
    function feedCtrl2(){
      document.getElementById('all2').onclick = ()=>filter2('all');
      document.getElementById('lol2').onclick = ()=>filter2('lol');
      document.getElementById('steam2').onclick = ()=>filter2('steam');
      document.getElementById('mobile2').onclick = ()=>filter2('mobile');
      document.getElementById('genshin2').onclick = ()=>filter2('genshin');
      document.getElementById('mood2').onclick = ()=>filter2('mood');
    }

    /* 發表主題 */
    function openCompose2(){
      showModal2('發表主題', composeForm2(), '送出後暫存於此頁示範（無後端）');
      const f = document.getElementById('compose2');
      f.addEventListener('submit', e=>{
        e.preventDefault();
        const title = f.title.value.trim();
        const board = f.board.value; const tags = f.tags.value.split(',').map(s=>s.trim()).filter(Boolean).slice(0,3);
        if(!title){ alert('請輸入標題'); return; }
        const np = {id:Date.now(), board, title, author:pick(USERS2), likes:0, replies:0, views:0, tags, minsAgo:2};
        POSTS2.unshift(np); close2(); filter2('all');
      });
    }
    function composeForm2(){
      const opts = BOARDS2.map(b=>`<option value="${b.key}">${b.name}</option>`).join('');
      return `
        <form id="compose2" class="list">
          <label>標題 <input name="title" placeholder="請輸入標題" style="width:100%; padding:10px; border-radius:10px; border:1px solid var(--line); background:var(--surface)"></label>
          <label>分區 <select name="board" style="width:100%; padding:10px; border-radius:10px; border:1px solid var(--line); background:var(--surface)">${opts}</select></label>
          <label>標籤（逗號分隔，最多 3 個） <input name="tags" placeholder="#攻略, #情報" style="width:100%; padding:10px; border-radius:10px; border:1px solid var(--line); background:var(--surface)"></label>
          <div style="display:flex; gap:8px; justify-content:flex-end">
            <button class="btn link" type="button" onclick="close2()">取消</button>
            <button class="btn primary" type="submit">送出</button>
          </div>
        </form>`;
    }

    /* 綜合排行（右側） */
    let curMix2 = '7';
    function renderMix2(){
      const data = curMix2==='7'? MIX7b : MIX30b;
      mixList2.innerHTML = data.slice(0,10).map((g,i)=>{
        const cls = i<3 ? `top top${i+1}` : '';
        const sign = g.delta>0? '▲' : g.delta<0? '▼' : '–';
        const dcls = g.delta>0? 'up' : g.delta<0? 'down' : 'flat';
        const n = g.delta===0? 0 : Math.abs(g.delta);
        return `<div class="rrow ${cls}"><div class="rank">${i+1}</div><div class="title-2">${g.name}</div><div class="delta ${dcls}">${sign} ${n}</div></div>`;
      }).join('');
    }

    /* 類別排行（7/30 切換；無 moba） */
    let curCatsPeriod = '7';
    function renderCats2(){
      const data = curCatsPeriod==='7' ? CATS7 : CATS30;
      const grid = document.getElementById('cats2');
      const entries = Object.entries(data);
      grid.classList.add('grid-tiles');
      grid.innerHTML = entries.map(([key,list])=>{
        const items = list.map((n,idx)=>{
          const cls = idx<3 ? `top top${idx+1}` : '';
          const sign = idx<2 ? '▲' : idx===2 ? '–' : '▼';
          const dcls = idx<2 ? 'up' : idx===2 ? 'flat' : 'down';
          const delta = idx<2 ? r(1,4) : idx===2 ? 0 : r(1,3);
          return `<div class="rrow ${cls}"><div class="rank">${idx+1}</div><div class="title-2">${n}</div><div class="delta ${dcls}">${sign} ${delta}</div></div>`;
        }).join('');
        return `<article class="tile" style="min-height:auto">
                  <div class="name" style="margin-bottom:6px">${key.toUpperCase()}</div>
                  <div class="list">${items}</div>
                  <div style="display:flex;justify-content:flex-end;margin-top:6px">
                    <button class="btn" data-cat="${key}">查看詳細</button>
                  </div>
                </article>`;
      }).join('');

      grid.querySelectorAll('.btn').forEach(b=>{
        b.addEventListener('click',()=>{
          const key = b.dataset.cat;
          const title = `${key.toUpperCase()} 類別完整排行（近 ${curCatsPeriod} 天）`;
          const base = (curCatsPeriod==='7' ? CATS7[key] : CATS30[key]) || [];
          const list = base.concat(Array.from({length:10}).map((_,i)=>`${key} extra #${i+1}`));
          const html = list.map((n,i)=>{
            const cls = i<3 ? `top top${i+1}` : '';
            const sign = i<2 ? '▲' : i===2 ? '–' : '▼';
            const dcls = i<2 ? 'up' : i===2 ? 'flat' : 'down';
            const delta = i<2 ? r(1,4) : i===2 ? 0 : r(1,3);
            return `<div class="rrow ${cls}"><div class="rank">${i+1}</div><div class="title-2">${n}</div><div class="delta ${dcls}">${sign} ${delta}</div></div>`;
          }).join('');
          showModal2(title, html, '此為示範資料（可串接真實 API）');
        });
      });
    }

    /* Modal */
    function showModal2(title, inner, sub=''){
      mtitle2.textContent = title;
      msub2.textContent = sub || '';
      mlist2.innerHTML = inner;
      modal2.classList.add('show');
      document.body.classList.add('noscroll');
    }
    function close2(){ modal2.classList.remove('show'); document.body.classList.remove('noscroll'); }

    /* 主題/密度/主色 */
    document.getElementById('t-dark').addEventListener('change', e=>{ document.body.classList.toggle('dark', e.target.checked); });
    document.getElementById('t-density').addEventListener('change', e=>{ document.body.classList.toggle('compact', e.target.checked); });
    document.querySelectorAll('.dot').forEach(d=> d.addEventListener('click', ()=>{ document.documentElement.style.setProperty('--accent', d.dataset.accent); }));

    /* 搜尋 */
    function doSearch2(){
      const kw = (document.getElementById('q2').value||'').toLowerCase(); if(!kw){ filter2('all'); return }
      const filtered = POSTS2.filter(p=> p.title.toLowerCase().includes(kw) || p.tags.join(',').toLowerCase().includes(kw) || p.author.toLowerCase().includes(kw));
      feed2.innerHTML='';
      const tmp = filtered.slice(0,40);
      tmp.forEach(p=>{
        const el = document.createElement('article'); el.className='row';
        el.innerHTML = `<div class="av">${p.author[0].toUpperCase()}</div><div><div style="font-weight:900">${p.title}</div><div class="meta">@${p.author} ｜ 分區：<strong>${BOARDS2.find(b=>b.key===p.board).name}</strong> ｜ ${ago2(p.minsAgo)} ${p.tags.map(t=>`<span class="chip">${t}</span>`).join('')}</div></div><div style="display:flex;gap:8px"><span class="ghost">❤️ ${p.likes}</span><span class="ghost">💬 ${p.replies}</span><span class="ghost">👁️ ${p.views}</span></div>`;
feed2.appendChild(el);
      });
      feedCount2.textContent = `搜尋結果：${tmp.length} 篇（顯示前 40）`;
      window.scrollTo({top: document.querySelector('.layout').offsetTop - 60, behavior:'smooth'});
    }

    /* 綁定 */
    document.getElementById('mix7b').onclick = ()=>{ curMix2='7'; document.getElementById('mix7b').classList.add('on'); document.getElementById('mix30b').classList.remove('on'); renderMix2(); }
    document.getElementById('mix30b').onclick = ()=>{ curMix2='30'; document.getElementById('mix30b').classList.add('on'); document.getElementById('mix7b').classList.remove('on'); renderMix2(); }

    document.getElementById('allMix2').onclick = ()=>{
      const data = curMix2==='7'? MIX7b : MIX30b;
      const html = data.concat(Array.from({length:5}).map((_,i)=>({name:`Extra Game #${i+1}`, delta: i%2? +1 : -1})))
        .map((g,i)=>{
          const sign = g.delta>0? '▲' : g.delta<0? '▼' : '–';
          const cls  = g.delta>0? 'up' : g.delta<0? 'down' : 'flat';
          const n    = g.delta===0? 0 : Math.abs(g.delta);
          const topCls = i<3 ? `top top${i+1}` : '';
          return `<div class="rrow ${topCls}"><div class="rank">${i+1}</div><div class="title-2">${g.name}</div><div class="delta ${cls}">${sign} ${n}</div></div>`;
        }).join('');
      showModal2(`綜合遊戲熱度排行（近 ${curMix2} 天）完整前 15 名`, html, '示範視圖（可改為跳轉頁 ranks.html）');
    };

    document.getElementById('x2').onclick = close2;
    modal2.addEventListener('click', e=>{ if(e.target===modal2) close2(); });
    document.getElementById('btnNew2').onclick = openCompose2;
    document.getElementById('fab2').onclick = openCompose2;

    function renderTags2(){
      const hot = TAGS2.sort((a,b)=>b.c-a.c).slice(0,24);
      document.getElementById('hotTags2').innerHTML =
        hot.map(x=>`<span class="chip" style="cursor:pointer">${x.t} (${x.c})</span>`).join('');
      document.querySelectorAll('#hotTags2 .chip').forEach(ch=>{
        ch.addEventListener('click', ()=>{
          const text = ch.textContent.split(' ')[0].replace('#','');
          document.getElementById('q2').value = text;
          doSearch2();
        });
      });
    }
    function renderAuthors2(){
      document.getElementById('authors2').innerHTML = AUTHORS2.map((a,i)=>{
        const topCls = i<3 ? `top top${i+1}` : '';
        return `<div class="rrow ${topCls}">
          <div class="rank">${i+1}</div>
          <div><strong class="title-2">${a.name}</strong>
            <div class="meta">近 24 小時發文 ${a.posts} ｜ 獲讚 ${a.likes}</div>
          </div>
          <div class="delta up">+${r(1,12)}</div>
        </div>`;
      }).join('');
    }

    /* 啟動 */
    initTiles2(); initHot2(); initTicker2(); feedCtrl2(); renderPinned(); render2(); renderMix2();
    renderCats2();
    renderTags2();
    renderAuthors2();

    /* ====== 你的「我的史萊姆」卡片 JS（原樣整合） ====== */
    (function(){
      const api = {
        me:            ()=>fetch('/api/pet/me'),
        care:  (a)=>fetch('/api/pet/care',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({action:a})}),
        adv:           ()=>fetch('/api/pet/adventure',{method:'POST'}),
        balance:       ()=>fetch('/api/points/balance')
      };
      const el = (sel)=>document.querySelector(sel);
      const clamp=(n)=>Math.max(0,Math.min(100,n));
      const bars = {
        hunger: [el('#bar-hunger'), el('#txt-hunger')],
        mood:   [el('#bar-mood'),   el('#txt-mood')],
        energy: [el('#bar-energy'), el('#txt-energy')],
        clean:  [el('#bar-clean'),  el('#txt-clean')],
        health: [el('#bar-health'), el('#txt-health')]
      };
      const logBox = el('#gs-log');
      function log(t,cls){ const li=document.createElement('li'); if(cls) li.className=cls; li.textContent=t; logBox.prepend(li); if(logBox.childElementCount>12) logBox.removeChild(logBox.lastChild); }
      function setBar(key,val){
        const [i,txt] = bars[key];
        const v = clamp(val|0);
        txt.textContent = v;
        i.style.width = v+'%';
        i.parentElement.classList.remove('warn','bad');
        if(v<40) i.parentElement.classList.add('warn');
        if(v<20) i.parentElement.classList.add('bad');
      }

      // 畫像素史萊姆
      const cvs = el('#gs-pet-canvas');
      const ctx = cvs.getContext('2d',{alpha:false}); ctx.imageSmoothingEnabled=false;
      let tick=0;
      function drawPet(mood=80, clean=80, sleeping=false){
        const W=cvs.width, H=cvs.height; tick++;
        ctx.fillStyle='#79b7ff'; ctx.fillRect(0,0,W,H);
        ctx.fillStyle='#91e27c'; ctx.fillRect(0,H-36,W,36);
        const y = H-36-44 + Math.sin(tick/12)*2;
        ctx.fillStyle='#f6d84a'; ctx.fillRect(40,y,40,34);
        ctx.fillStyle='#e1c146'; ctx.fillRect(40,y+4,40,3);
        ctx.fillStyle='#000'; ctx.fillRect(39,y,1,34); ctx.fillRect(80,y,1,34); ctx.fillRect(39,y-1,42,1); ctx.fillRect(39,y+34,42,1);
        const blink = (tick%120<6) ? 1:3;
        drawEye(52,y+10,blink); drawEye(66,y+10,blink);
        if(mood>=60){ ctx.fillRect(57,y+22,8,1); ctx.fillRect(59,y+23,4,1); }
        else if(mood>=30){ ctx.fillRect(57,y+22,8,1); }
        else{ ctx.fillRect(57,y+23,8,1); ctx.fillRect(59,y+22,4,1); }
        if(clean<50){ ctx.fillStyle='#7f6a2a'; ctx.fillRect(46,y+18,2,2); ctx.fillRect(72,y+14,1,2); }
        if(sleeping){ ctx.fillStyle='#fff'; ctx.font='10px monospace'; ctx.fillText('Z',86,y+6); ctx.fillText('z',92,y+12); }
function drawEye(x,y,h){ ctx.fillStyle='#fff'; ctx.fillRect(x-1,y-1,5,h+2); ctx.fillStyle='#000'; ctx.fillRect(x-2,y-2,7,1); ctx.fillRect(x-2,y+h+1,7,1); ctx.fillRect(x-2,y-2,1,h+4); ctx.fillRect(x+4,y-2,1,h+4); ctx.fillRect(x+1,y,1,h); }
      }

      // 狀態與渲染
      let pet = null, coins = 0;
      function syncUI(){
        if(!pet) return;
        el('#gs-pet-name').textContent = pet.name || '史萊姆';
        el('#gs-pet-lv').textContent   = pet.level;
        el('#gs-pet-xp').textContent   = pet.xp;
        el('#gs-pet-xpmax').textContent= pet.xpMax;
        el('#gs-coins').textContent    = coins;
        setBar('hunger', pet.hunger);
        setBar('mood',   pet.mood);
        setBar('energy', pet.energy);
        setBar('clean',  pet.cleanliness ?? pet.clean);
        setBar('health', pet.health);
        drawPet(pet.mood, pet.cleanliness ?? pet.clean, false);
      }

      async function refresh(){
        try{
          const [p,b] = await Promise.all([
            api.me().then(r=>r.json()),
            api.balance().then(r=>r.json())
          ]);
          pet = p; coins = b.balance ?? 0;
          syncUI();
        }catch(e){
          log('尚未接上後端 API，卡片已載入（僅顯示範例畫面）','warn');
          pet = {name:'史萊姆', level:1, xp:0, xpMax:50, hunger:80, mood:80, energy:80, clean:80, cleanliness:80, health:100};
          coins = 0; syncUI();
        }
      }

      document.querySelectorAll('.gs-actions button[data-act]').forEach(btn=>{
        btn.addEventListener('click', async ()=>{
          const act = btn.getAttribute('data-act');
          try{
            const res = await api.care(act);
            const data = await res.json();
            pet = data.pet || pet; coins = (data.points ?? coins);
            syncUI(); log(data.message || `已執行：${act}`);
          }catch{ log('後端尚未連線，無法執行此動作。','warn'); }
        });
      });
      document.getElementById('gs-adv').addEventListener('click', async ()=>{
        try{
          const res = await api.adv();
          const d = await res.json();
          pet = d.pet || pet; coins = (d.points ?? coins);
          syncUI();
          log(d.win ? `戰勝 ${d.monster}：+${d.rewardPoints} 點 · XP +${d.xp}` : `挑戰 ${d.monster} 失敗，休息一下！`);
        }catch{ log('後端尚未連線，無法冒險。','warn'); }
      });

      refresh();
      setInterval(()=>drawPet(pet?.mood ?? 80, pet?.cleanliness ?? pet?.clean ?? 80, false), 1000/12);
    })();

    /* 基本互動綁定 */
    document.getElementById('cats7b').onclick = ()=>{
      curCatsPeriod='7';
      document.getElementById('cats7b').classList.add('on');
      document.getElementById('cats30b').classList.remove('on');
      renderCats2();
    };
    document.getElementById('cats30b').onclick = ()=>{
      curCatsPeriod='30';
      document.getElementById('cats30b').classList.add('on');
      document.getElementById('cats7b').classList.remove('on');
      renderCats2();
    };
  </script>
</body>
</html>
