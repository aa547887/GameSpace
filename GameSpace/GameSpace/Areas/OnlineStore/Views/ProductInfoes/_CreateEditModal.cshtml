
@model GameSpace.Areas.OnlineStore.ViewModels.ProductInfoFormVM
@{
    var suppliers = (IEnumerable<dynamic>)(ViewBag.SupplierList ?? Enumerable.Empty<dynamic>());
    var platforms = (IEnumerable<dynamic>)(ViewBag.PlatformList ?? Enumerable.Empty<dynamic>());
    var merchTypes = (IEnumerable<dynamic>)(ViewBag.MerchTypeList ?? Enumerable.Empty<dynamic>());
    var gameTypes = (IEnumerable<string>)(ViewBag.GameTypeList ?? Enumerable.Empty<string>());
    var currencies = (IEnumerable<string>)(ViewBag.CurrencyList ?? new[] { "TWD", "USD" });

    var sizeList = (IEnumerable<string>)(ViewBag.SizeList ?? Enumerable.Empty<string>());
    var colorList = (IEnumerable<string>)(ViewBag.ColorList ?? Enumerable.Empty<string>());
    var weightList = (IEnumerable<string>)(ViewBag.WeightList ?? Enumerable.Empty<string>());
    var dimensionsList = (IEnumerable<string>)(ViewBag.DimensionsList ?? Enumerable.Empty<string>());
    var materialList = (IEnumerable<string>)(ViewBag.MaterialList ?? Enumerable.Empty<string>());

    var isEdit = (string)(ViewBag.Mode ?? "create") == "edit";
    bool hasType = !string.IsNullOrWhiteSpace(Model.ProductType);
}

@if (ViewBag.ModelErrors != null)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var err in ViewBag.ModelErrors)
            {
                <li><strong>@err.Key</strong>:
                    @foreach (var msg in err.Errors)
                    {
                        @msg <br />
                    }
                </li>
            }
        </ul>
    </div>
}

@section Styles {
    <style>
        fieldset[disabled] {
            pointer-events: none;
            opacity: .6;
        }

        .thumb {
            width: 120px;
            height: 120px;
            object-fit: cover;
            border: 1px solid #dee2e6;
            border-radius: .25rem;
        }

        .snapshot-box {
            background: #f8f9fa;
            padding: 10px;
            border: 1px dashed #ccc;
            font-size: 0.9rem;
        }
    </style>
}

<div class="modal-dialog modal-xxl">
    <div class="modal-content shadow-lg">
        <div class="modal-header bg-light">
            <h5 class="modal-title">@((isEdit ? "編輯商品" : "新增商品"))</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>

        <form class="js-ajax-form" method="post"
              action="@Url.Action(isEdit? "Edit":"Create","ProductInfoes", new { area="OnlineStore" })"
              enctype="multipart/form-data">
            @Html.AntiForgeryToken()
            @if (isEdit)
            {
                @Html.HiddenFor(m => m.ProductId)
            }

            <div class="modal-body">

                <!-- 商品名稱 + 上架狀態 -->
                <div class="row g-2 mb-3 align-items-center">
                    <div class="col-md-8">
                        <label class="form-label">商品名稱 *</label>
                        @Html.TextBoxFor(m => m.ProductName, new { @class = "form-control" })
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">上架狀態</label>
                        <select name="IsActive" class="form-select">
                            <option value="true" selected="@(Model.IsActive)">上架</option>
                            <option value="false" selected="@(!Model.IsActive)">不上架</option>
                        </select>
                    </div>
                </div>

                <!-- 基本資訊 -->
                <div class="row g-3 mb-3">
                    <div class="col-md-3">
                        <label class="form-label">供應商 *</label>
                        <select name="SupplierId" class="form-select" required>
                            <option value="">請選擇</option>
                            @foreach (var s in suppliers)
                            {
                                <option value="@s.SupplierId" selected="@(Model.SupplierId == (int?)s.SupplierId)">
                                    @s.SupplierName
                                </option>
                            }
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">幣別</label>
                        <select name="CurrencyCode" class="form-select">
                            @foreach (var c in currencies)
                            {
                                <option value="@c" selected="@(Model.CurrencyCode == c)">@c</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">價格</label>
                        @Html.TextBoxFor(m => m.Price, new { @class = "form-control", type = "number", min = "0" })
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">數量</label>
                        @Html.TextBoxFor(m => m.ShipmentQuantity, new { @class = "form-control", type = "number", min = "0" })
                    </div>
                </div>

                <!-- 類別 -->
                <div class="mb-3">
                    <label class="form-label">類別 *</label>
                    <select id="productType" name="ProductType" class="form-select">
                        <option value="">請先選擇類別</option>
                        <option value="game" selected="@(Model.ProductType == "game")">game</option>
                        <option value="nogame" selected="@(Model.ProductType == "nogame")">notgame</option>
                    </select>
                </div>

                <!-- Game Detail -->
                <fieldset id="fsGame" class="border rounded p-3 mb-3">
                    <legend class="float-none w-auto px-2 small">Game Detail</legend>
                    <div class="mb-3">
                        <label class="form-label">遊戲描述</label>
                        @Html.TextAreaFor(m => m.GameProductDescription, new { @class = "form-control" })
                    </div>
                    <div class="row g-3">
                        <div class="col-md-4">
                            <label class="form-label">平台</label>
                            <select id="platformId" name="PlatformId" class="form-select">
                                <option value="">請選擇平台</option>
                                @foreach (var p in platforms)
                                {
                                    <option value="@p.PlatformId" selected="@(Model.PlatformId == (int?)p.PlatformId)">
                                        @p.PlatformName
                                    </option>
                                }
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">遊戲類型</label>
                            <input name="GameType" class="form-control" value="@Model.GameType" list="gameTypeList" />
                            <datalist id="gameTypeList">
                                @foreach (var gt in gameTypes)
                                {
                                    <option value="@gt"></option>
                                }
                            </datalist>
                        </div>
                    </div>
                </fieldset>

                <!-- NotGame Detail -->
                <fieldset id="fsOther" class="border rounded p-3 mb-3">
                    <legend class="float-none w-auto px-2 small">NotGame Detail</legend>
                    <div class="mb-3">
                        <label class="form-label">描述</label>
                        @Html.TextAreaFor(m => m.OtherProductDescription, new { @class = "form-control" })
                    </div>
                    <div class="row g-3">
                        <div class="col-md-3"><label>尺寸</label> @Html.TextBoxFor(m => m.Size, new { @class = "form-control" })</div>
                        <div class="col-md-3"><label>顏色</label> @Html.TextBoxFor(m => m.Color, new { @class = "form-control" })</div>
                        <div class="col-md-3"><label>重量</label> @Html.TextBoxFor(m => m.Weight, new { @class = "form-control" })</div>
                        <div class="col-md-3"><label>材質</label> @Html.TextBoxFor(m => m.Material, new { @class = "form-control" })</div>
                    </div>
                </fieldset>

                <!-- 圖片 -->
                <div class="border rounded p-3 mb-3">
                    <h6>商品圖片</h6>
                    <input type="file" name="Image" class="form-control" accept="image/*" />
                    @if (isEdit && !string.IsNullOrEmpty(Model.ProductImageUrl))
                    {
                        <div class="mt-2">
                            <img class="thumb" src="@Model.ProductImageUrl" alt="商品圖片" />
                        </div>
                    }
                </div>

                <!-- 歷史紀錄 -->
                @if (isEdit)
                {
                    @* <div class="border rounded p-3 mb-3">
                        <h6>歷史紀錄</h6>
                        <div style="max-height:200px; overflow-y:auto;">
                            @foreach (var log in Model.LastLogs ?? new List<dynamic>())
                            {
                                <div><strong>@log.ChangedAt.ToString("yyyy/MM/dd HH:mm")</strong> - @log.ActionType : @log.NewValue</div>
                            }
                        </div>
                    </div> *@
                    <div class="text-muted small">
                        創立時間: @Model.ProductCreatedAt.ToString("yyyy/MM/dd HH:mm")<br />
                        最後異動時間: @(Model.ProductUpdatedAt?.ToString("yyyy/MM/dd HH:mm") ?? "-")
                    </div>
                }
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">關閉</button>
                <button type="submit" class="btn btn-primary">儲存</button>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    <script>
        (function(){
          const typeSel = document.getElementById('productType');
          const fsGame  = document.getElementById('fsGame');
          const fsOther = document.getElementById('fsOther');

          function applyType(v){
            if(!v){ fsGame.disabled = true; fsOther.disabled = true; return; }
            const isGame = (v === 'game');
            fsGame.disabled  = !isGame;
            fsOther.disabled =  isGame;
          }
          applyType(typeSel.value);
          typeSel.addEventListener('change', (e)=> applyType(e.target.value));

          const platformSel  = document.getElementById('platformId');
          const platformName = document.querySelector('input[name="PlatformName"]');
          function fillPlatformName(){
            const opt = platformSel?.selectedOptions?.[0];
            platformName.value = opt ? (opt.textContent||'').trim() : '';
          }
          platformSel?.addEventListener('change', fillPlatformName);
          fillPlatformName();
        })();
    </script>
}
