@model List<GameSpace.Areas.Forum.Controllers.ReportsController.DailyIndexVm>
@using System.Text.Json

@{
    ViewData["Title"] = "歷史指數查詢";
}

<h2 class="mb-3">@ViewData["Title"]</h2>

<!-- 查詢條件區塊 -->
<form method="get" class="row g-3 mb-3">
    <div class="col-md-3">
        <label class="form-label">遊戲</label>
        <!-- 下拉選單：顯示中文（無中文→英文），selected 依 ViewBag.GameId -->
        <select name="gameId" class="form-select">
            <option value="">請選擇</option>
            @if (ViewBag.Games != null)
            {
                foreach (var g in ViewBag.Games)
                {
                    int gid = (int)g.GameId;
                    string name = string.IsNullOrWhiteSpace((string)g.NameZh) ? (string)g.Name : (string)g.NameZh;
                    <option value="@gid" selected="@(ViewBag.GameId == gid ? "selected" : null)">@name</option>
                }
            }
        </select>
    </div>
    <div class="col-md-3">
        <label class="form-label">起始日</label>
        <input type="date" name="from" value="@ViewBag.From" class="form-control" />
    </div>
    <div class="col-md-3">
        <label class="form-label">結束日</label>
        <input type="date" name="to" value="@ViewBag.To" class="form-control" />
    </div>
    <div class="col-md-3 d-flex align-items-end">
        <button class="btn btn-primary w-100">查詢</button>
    </div>
    <div class="col-md-6">
        <label class="form-label">指標</label>
        <select name="metricIds" class="form-select" multiple>
            @foreach (var m in ViewBag.Metrics)
            {
                <option value="@m.MetricId"
                        selected="@(ViewBag.SelectedMetrics != null && ((int[])ViewBag.SelectedMetrics).Contains((int)m.MetricId) ? "selected" : null)">
                    @m.Code (@m.Description)
                </option>
            }
        </select>
        <small class="text-muted">可多選</small>
    </div>

</form>

@if (Model != null && Model.Any())
{
    <!-- 匯出功能（有結果才顯示） -->
    <div class="mb-2 d-flex flex-wrap gap-2">
        <!-- 匯出 CSV（GET） -->
        <a class="btn btn-outline-secondary"
           asp-area="Forum" asp-controller="Reports" asp-action="ExportCsv"
           asp-all-route-data="ViewBag.ExportRoute">匯出 CSV</a>

        <!-- 匯出 Excel（GET，純資料） -->
        <a class="btn btn-outline-success"
           asp-area="Forum" asp-controller="Reports" asp-action="ExportExcel"
           asp-all-route-data="ViewBag.ExportRoute">匯出 Excel</a>

        <!-- 匯出 Excel（POST，含折線圖 PNG） -->
        <form id="exportWithChartForm" method="post" target="_blank"
              asp-area="Forum" asp-controller="Reports" asp-action="ExportExcelWithChartImage"
              class="d-inline">
            <input type="hidden" name="gameId" value="@ViewBag.GameId" />
            <input type="hidden" name="from" value="@ViewBag.From" />
            <input type="hidden" name="to" value="@ViewBag.To" />

            @* metrics 多選參數，也要帶 *@
            @foreach (var mid in (int[])(ViewBag.SelectedMetrics ?? Array.Empty<int>()))
            {
                <input type="hidden" name="metricIds" value="@mid" />
            }

            <input type="hidden" id="chartDataUrl" name="chartDataUrl" />

            @Html.AntiForgeryToken()

            <button type="submit" class="btn btn-outline-primary" id="btnExportWithChart">
                匯出 Excel（含折線圖）
            </button>
        </form>


        <!-- 前端直接下載折線圖 PNG（非必要，但超好用） -->
        <button type="button" id="btnDownloadPng" class="btn btn-outline-dark">
            下載折線圖 PNG
        </button>
    </div>

    <!-- 查詢結果表格 -->
    <table class="table table-striped table-sm mt-2">
        <thead>
            <tr>
                <th>日期</th>
                <th>遊戲</th>
                <th>Index</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var r in Model)
            {
                <tr>
                    <td>@r.Date.ToString("yyyy-MM-dd")</td>
                    <td>@r.GameName</td>
                    <td>@r.IndexValue</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- 折線圖區塊 -->
    <div class="mt-4" style="height: 360px;">
        <h5 class="mb-2">指數走勢</h5>
        <canvas id="idxChart" height="160"></canvas>
    </div>
}
else
{
    <p class="text-muted">請先選擇條件查詢。</p>
}

@section Scripts {
    <!-- Chart.js CDN -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        (function () {
            const hasData = @((Model != null && Model.Any()) ? "true" : "false");
            if (!hasData) return;

            // 1) 安全序列化資料
            const labels = @Html.Raw(JsonSerializer.Serialize(Model.Select(m => m.Date.ToString("yyyy-MM-dd")).ToList()));
            const series = @Html.Raw(JsonSerializer.Serialize(Model.Select(m => m.IndexValue).ToList()));

            // 2) 建圖
            const canvas = document.getElementById('idxChart');
            if (!canvas) return;

            const chart = new Chart(canvas, {
                type: 'line',
                data: {
                    labels,
                    datasets: [{
                        label: 'Popularity Index',
                        data: series,
                        tension: 0.25,
                        fill: false,
                        pointRadius: 2,
                        borderWidth: 2
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: { title: { display: true, text: '日期' } },
                        y: { title: { display: true, text: 'Index' }, beginAtZero: false }
                    },
                    plugins: { legend: { display: true } }
                }
            });

            // 3) 產生高解析度 PNG（避免視網膜糊）
            function toHiDpiPngDataUrl(srcCanvas) {
                const dpr = Math.max(1, window.devicePixelRatio || 1);
                const tmp = document.createElement('canvas');
                // 以 CSS 尺寸為基準放大
                const rect = srcCanvas.getBoundingClientRect();
                const w = Math.max(1, Math.round(rect.width));
                const h = Math.max(1, Math.round(rect.height));
                tmp.width  = w * dpr;
                tmp.height = h * dpr;

                const tctx = tmp.getContext('2d');
                tctx.scale(dpr, dpr);
                // 把原 canvas 以 CSS 尺寸畫上去
                tctx.drawImage(srcCanvas, 0, 0, w, h);
                return tmp.toDataURL('image/png', 1.0);
            }

            // 4) 匯出 Excel（含圖）：在 form.submit 時把 dataURL 塞進 hidden
            const form = document.getElementById('exportWithChartForm'); // <form id="exportWithChartForm" ...>
            const hidden = document.getElementById('chartDataUrl');       // <input type="hidden" id="chartDataUrl" ...>
            if (form && hidden) {
                form.addEventListener('submit', function () {
                    hidden.value = toHiDpiPngDataUrl(canvas);
                    // 讓表單照常送出（建議表單加 target="_blank" 避免原頁被導走）
                });
            }

            // 5) 直接下載前端 PNG
            document.getElementById('btnDownloadPng')?.addEventListener('click', () => {
                const a = document.createElement('a');
                a.href = toHiDpiPngDataUrl(canvas);
                a.download = `PopularityIndex_${new Date().toISOString().slice(0,10)}.png`;
                a.click();
            });
        })();
    </script>

}
