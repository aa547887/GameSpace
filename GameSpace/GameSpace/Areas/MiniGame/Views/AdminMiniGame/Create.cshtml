@model GameSpace.Areas.MiniGame.Models.ViewModels.AdminMiniGameCreateViewModel
@{
    ViewData["Title"] = "�s�W�C��";
    Layout = "~/Areas/MiniGame/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <!-- �������D -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">�s�W�C��</h1>
        <div>
            <a href="@Url.Action("Index", "AdminMiniGame")" class="d-none d-sm-inline-block btn btn-sm btn-secondary shadow-sm">
                <i class="fas fa-arrow-left fa-sm text-white-50"></i> ��^�C��
            </a>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">�C����T</h6>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        
                        <div class="form-group">
                            <label asp-for="GameName" class="control-label">�C���W�� *</label>
                            <input asp-for="GameName" class="form-control" placeholder="�п�J�C���W��" />
                            <span asp-validation-for="GameName" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="GameDescription" class="control-label">�C���y�z *</label>
                            <textarea asp-for="GameDescription" class="form-control" rows="4" placeholder="�п�J�C���y�z"></textarea>
                            <span asp-validation-for="GameDescription" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="GameType" class="control-label">�C������ *</label>
                                    <select asp-for="GameType" class="form-control">
                                        <option value="">�п�ܹC������</option>
                                        <option value="�q��">�q��</option>
                                        <option value="�ʧ@">�ʧ@</option>
                                        <option value="����">����</option>
                                        <option value="�g��">�g��</option>
                                        <option value="�v�t">�v�t</option>
                                        <option value="����">����</option>
                                        <option value="�����t">�����t</option>
                                        <option value="��L">��L</option>
                                    </select>
                                    <span asp-validation-for="GameType" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="IsActive" class="control-label">���A</label>
                                    <div class="form-check">
                                        <input asp-for="IsActive" class="form-check-input" type="checkbox" />
                                        <label class="form-check-label" for="IsActive">
                                            �ҥ�
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="CostPoints" class="control-label">�����I�� *</label>
                                    <input asp-for="CostPoints" type="number" class="form-control" placeholder="�п�J�����I��" min="0" />
                                    <span asp-validation-for="CostPoints" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="RewardPoints" class="control-label">���y�I�� *</label>
                                    <input asp-for="RewardPoints" type="number" class="form-control" placeholder="�п�J���y�I��" min="0" />
                                    <span asp-validation-for="RewardPoints" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="MaxPlayCount" class="control-label">�̤j�C������ *</label>
                                    <input asp-for="MaxPlayCount" type="number" class="form-control" placeholder="�п�J�̤j�C������" min="1" />
                                    <span asp-validation-for="MaxPlayCount" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label asp-for="GameImageUrl" class="control-label">�C���Ϥ���}</label>
                            <input asp-for="GameImageUrl" type="url" class="form-control" placeholder="�п�J�C���Ϥ���}" />
                            <span asp-validation-for="GameImageUrl" class="text-danger"></span>
                            <small class="form-text text-muted">�i��A�Ω���ܹC���Ϥ�</small>
                        </div>

                        <div class="form-group">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> �إ߹C��
                            </button>
                            <a href="@Url.Action("Index", "AdminMiniGame")" class="btn btn-secondary">
                                <i class="fas fa-times"></i> ����
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">�إ߶���</h6>
                </div>
                <div class="card-body">
                    <div class="text-center">
                        <i class="fas fa-gamepad fa-3x text-primary mb-3"></i>
                        <h5>�C���إߪ`�N�ƶ�</h5>
                    </div>
                    <ul class="list-unstyled">
                        <li class="mb-2">
                            <i class="fas fa-check text-success"></i>
                            �C���W�٭n�l�ޤH
                        </li>
                        <li class="mb-2">
                            <i class="fas fa-check text-success"></i>
                            �y�z�n�M���������k
                        </li>
                        <li class="mb-2">
                            <i class="fas fa-check text-success"></i>
                            �I�Ƴ]�w�n�X�z
                        </li>
                        <li class="mb-2">
                            <i class="fas fa-check text-success"></i>
                            �̤j�C�����ƭn�A��
                        </li>
                        <li class="mb-2">
                            <i class="fas fa-check text-success"></i>
                            �i�H��ܬO�_�ߧY�ҥ�
                        </li>
                    </ul>
                </div>
            </div>

            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">�C����������</h6>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <span class="badge badge-info">�q��</span>
                        <small class="text-muted">�ݭn��ҩM�������C��</small>
                    </div>
                    <div class="mb-3">
                        <span class="badge badge-danger">�ʧ@</span>
                        <small class="text-muted">�ݭn�ֳt�������C��</small>
                    </div>
                    <div class="mb-3">
                        <span class="badge badge-warning">����</span>
                        <small class="text-muted">�ݭn�����W�����C��</small>
                    </div>
                    <div class="mb-3">
                        <span class="badge badge-success">�g��</span>
                        <small class="text-muted">�g���������C��</small>
                    </div>
                    <div class="mb-3">
                        <span class="badge badge-primary">�v�t</span>
                        <small class="text-muted">�v�t�������C��</small>
                    </div>
                </div>
            </div>

            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">�ֳt�]�w</h6>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-outline-info" onclick="setQuickSettings('�q��', '�ƿW', '�g��ƿW�C���A�D�ԧA���޿���', 10, 50, 5)">
                            <i class="fas fa-puzzle-piece"></i> �q���C��
                        </button>
                        <button type="button" class="btn btn-outline-danger" onclick="setQuickSettings('�ʧ@', '���D', '�ָ`�����D�C���A����A������', 20, 100, 3)">
                            <i class="fas fa-running"></i> �ʧ@�C��
                        </button>
                        <button type="button" class="btn btn-outline-warning" onclick="setQuickSettings('����', '��', '�����𨾹C���A�O�çA����a', 30, 150, 2)">
                            <i class="fas fa-chess"></i> �����C��
                        </button>
                        <button type="button" class="btn btn-outline-success" onclick="setQuickSettings('�g��', '�Ӫ�', '�ӪŮg���C���A���ѥ~�P�ĤH', 25, 120, 4)">
                            <i class="fas fa-rocket"></i> �g���C��
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        function setQuickSettings(type, name, description, cost, reward, maxPlay) {
            document.getElementById('GameType').value = type;
            document.getElementById('GameName').value = name;
            document.getElementById('GameDescription').value = description;
            document.getElementById('CostPoints').value = cost;
            document.getElementById('RewardPoints').value = reward;
            document.getElementById('MaxPlayCount').value = maxPlay;
        }

        // �I������
        document.getElementById('CostPoints').addEventListener('input', function() {
            const cost = parseInt(this.value);
            const reward = parseInt(document.getElementById('RewardPoints').value);
            
            if (cost < 0) {
                this.setCustomValidity('�����I�Ƥ��ର�t��');
            } else if (reward > 0 && cost > reward) {
                this.setCustomValidity('�����I�Ƥ����j����y�I��');
            } else {
                this.setCustomValidity('');
            }
        });

        document.getElementById('RewardPoints').addEventListener('input', function() {
            const reward = parseInt(this.value);
            const cost = parseInt(document.getElementById('CostPoints').value);
            
            if (reward < 0) {
                this.setCustomValidity('���y�I�Ƥ��ର�t��');
            } else if (cost > 0 && reward < cost) {
                this.setCustomValidity('���y�I�Ƥ����p������I��');
            } else {
                this.setCustomValidity('');
            }
        });

        // �̤j�C����������
        document.getElementById('MaxPlayCount').addEventListener('input', function() {
            const maxPlay = parseInt(this.value);
            
            if (maxPlay < 1) {
                this.setCustomValidity('�̤j�C�����ƥ����j��0');
            } else if (maxPlay > 1000) {
                this.setCustomValidity('�̤j�C�����Ƥ���W�L1000');
            } else {
                this.setCustomValidity('');
            }
        });
    </script>
}

