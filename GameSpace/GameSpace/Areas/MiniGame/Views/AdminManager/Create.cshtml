@model GameSpace.Areas.MiniGame.Models.ViewModels.AdminManagerCreateViewModel
@{
    ViewData["Title"] = "�s�W�޲z��";
    Layout = "~/Areas/MiniGame/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <!-- �������D -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">�s�W�޲z��</h1>
        <div>
            <a href="@Url.Action("Index", "AdminManager")" class="d-none d-sm-inline-block btn btn-sm btn-secondary shadow-sm">
                <i class="fas fa-arrow-left fa-sm text-white-50"></i> ��^�C��
            </a>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">�޲z�̸�T</h6>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Manager_Name" class="control-label">�޲z�̦W�� *</label>
                                    <input asp-for="Manager_Name" class="form-control" placeholder="�п�J�޲z�̦W��" />
                                    <span asp-validation-for="Manager_Name" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Manager_Account" class="control-label">�޲z�̱b�� *</label>
                                    <input asp-for="Manager_Account" class="form-control" placeholder="�п�J�޲z�̱b��" />
                                    <span asp-validation-for="Manager_Account" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Password" class="control-label">�K�X *</label>
                                    <input asp-for="Password" type="password" class="form-control" placeholder="�п�J�K�X" />
                                    <span asp-validation-for="Password" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="ConfirmPassword" class="control-label">�T�{�K�X *</label>
                                    <input asp-for="ConfirmPassword" type="password" class="form-control" placeholder="�ЦA����J�K�X" />
                                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label asp-for="Manager_Email" class="control-label">�q�l�l�� *</label>
                            <input asp-for="Manager_Email" type="email" class="form-control" placeholder="�п�J�q�l�l��" />
                            <span asp-validation-for="Manager_Email" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label class="control-label">������t *</label>
                            <div class="row">
                                @if (ViewBag.Roles != null)
                                {
                                    @foreach (var role in ViewBag.Roles)
                                    {
                                        <div class="col-md-6">
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" name="RoleIds" value="@role.ManagerRole_Id" id="role_@role.ManagerRole_Id" />
                                                <label class="form-check-label" for="role_@role.ManagerRole_Id">
                                                    @role.role_name
                                                </label>
                                                <small class="form-text text-muted">@role.role_description</small>
                                            </div>
                                        </div>
                                    }
                                }
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="form-check">
                                <input asp-for="IsActive" class="form-check-input" type="checkbox" />
                                <label class="form-check-label" for="IsActive">
                                    �ҥ�
                                </label>
                            </div>
                        </div>

                        <div class="form-group">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> �إߺ޲z��
                            </button>
                            <a href="@Url.Action("Index", "AdminManager")" class="btn btn-secondary">
                                <i class="fas fa-times"></i> ����
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">�إ߶���</h6>
                </div>
                <div class="card-body">
                    <div class="text-center">
                        <i class="fas fa-users-cog fa-3x text-primary mb-3"></i>
                        <h5>�޲z�̫إߪ`�N�ƶ�</h5>
                    </div>
                    <ul class="list-unstyled">
                        <li class="mb-2">
                            <i class="fas fa-check text-success"></i>
                            �޲z�̱b�������ߤ@
                        </li>
                        <li class="mb-2">
                            <i class="fas fa-check text-success"></i>
                            �q�l�l�󥲶��ߤ@
                        </li>
                        <li class="mb-2">
                            <i class="fas fa-check text-success"></i>
                            �K�X���צܤ�6�Ӧr��
                        </li>
                        <li class="mb-2">
                            <i class="fas fa-check text-success"></i>
                            �ݭn���t�A�������
                        </li>
                        <li class="mb-2">
                            <i class="fas fa-check text-success"></i>
                            �i�H��ܬO�_�ߧY�ҥ�
                        </li>
                    </ul>
                </div>
            </div>

            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">���⻡��</h6>
                </div>
                <div class="card-body">
                    @if (ViewBag.Roles != null && ((List<ManagerRolePermission>)ViewBag.Roles).Any())
                    {
                        @foreach (var role in ViewBag.Roles)
                        {
                            <div class="mb-3">
                                <span class="badge badge-info">@role.role_name</span>
                                <small class="text-muted">@role.role_description</small>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted">�ȵL����A�Х��إߨ���</p>
                    }
                </div>
            </div>

            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">�ֳt�ާ@</h6>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <a href="@Url.Action("CreateRole", "AdminManager")" class="btn btn-outline-success">
                            <i class="fas fa-plus"></i> �s�W����
                        </a>
                        <button type="button" class="btn btn-outline-primary" onclick="selectAllRoles()">
                            <i class="fas fa-check-square"></i> ���﨤��
                        </button>
                        <button type="button" class="btn btn-outline-secondary" onclick="clearAllRoles()">
                            <i class="fas fa-square"></i> �M�����
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        function selectAllRoles() {
            const checkboxes = document.querySelectorAll('input[name="RoleIds"]');
            checkboxes.forEach(checkbox => {
                checkbox.checked = true;
            });
        }

        function clearAllRoles() {
            const checkboxes = document.querySelectorAll('input[name="RoleIds"]');
            checkboxes.forEach(checkbox => {
                checkbox.checked = false;
            });
        }

        // �K�X�j���ˬd
        document.getElementById('Password').addEventListener('input', function() {
            const password = this.value;
            const strength = checkPasswordStrength(password);
            updatePasswordStrength(strength);
        });

        function checkPasswordStrength(password) {
            let strength = 0;
            if (password.length >= 6) strength++;
            if (password.length >= 8) strength++;
            if (/[a-z]/.test(password)) strength++;
            if (/[A-Z]/.test(password)) strength++;
            if (/[0-9]/.test(password)) strength++;
            if (/[^A-Za-z0-9]/.test(password)) strength++;
            return strength;
        }

        function updatePasswordStrength(strength) {
            const strengthText = document.getElementById('passwordStrength') || createPasswordStrengthElement();
            const strengthLevels = ['�ܮz', '�z', '�@��', '�j', '�ܱj', '���j'];
            const strengthColors = ['danger', 'warning', 'info', 'success', 'success', 'success'];
            
            strengthText.textContent = `�K�X�j��: ${strengthLevels[strength] || '�ܮz'}`;
            strengthText.className = `text-${strengthColors[strength] || 'danger'}`;
        }

        function createPasswordStrengthElement() {
            const element = document.createElement('small');
            element.id = 'passwordStrength';
            element.className = 'form-text text-muted';
            document.getElementById('Password').parentNode.appendChild(element);
            return element;
        }

        // ����������
        document.querySelector('form').addEventListener('submit', function(e) {
            const roleCheckboxes = document.querySelectorAll('input[name="RoleIds"]:checked');
            if (roleCheckboxes.length === 0) {
                e.preventDefault();
                alert('�Цܤֿ�ܤ@�Ө���');
            }
        });
    </script>
}

