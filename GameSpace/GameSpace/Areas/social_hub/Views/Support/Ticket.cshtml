@model GameSpace.Areas.social_hub.Models.ViewModels.TicketDetailVM
@{
    ViewData["Title"] = "工單 #" + Model.TicketId;
}

@section Styles {
    <link rel="stylesheet" href="~/lib/social_hub/css/support-bubbles.css" asp-append-version="true" />
    <style>
        /* 這裡只管本頁的高度/版面 */
        :root {
            --chat-pane-h: 72vh;
        }

        @@media (max-width: 991.98px) {
            :root {
                --chat-pane-h: 65vh;
            }
        }

        .left-col {
            height: var(--chat-pane-h);
            display: flex;
            flex-direction: column;
            gap: 12px;
        }

        .chat-card {
            height: var(--chat-pane-h);
            display: flex;
            flex-direction: column;
        }

            .chat-card #message-host {
                flex: 1 1 auto;
                min-height: 0;
                overflow-y: auto;
                padding: 18px 20px;
                background: #fff;
            }
    </style>
}

<a href="@Url.Action("Index")" class="btn btn-link mb-2">← 返回工作台</a>

<div class="row g-3">
    <!-- 左：工單資訊 + 詳細資料（合計同高） -->
    <div class="col-12 col-lg-4 left-col">
        <!-- 工單資訊 -->
        <div class="card shadow-sm info-card">
            <div class="card-header"><strong>工單資訊</strong></div>
            <div class="card-body">
                <dl class="row mb-0">
                    <dt class="col-4">工單ID</dt>
                    <dd class="col-8">@Model.TicketId</dd>
                    <dt class="col-4">使用者ID</dt>
                    <dd class="col-8">@Model.UserId</dd>
                    <dt class="col-4">主旨</dt>
                    <dd class="col-8">@Model.Subject</dd>
                    <dt class="col-4">狀態</dt>
                    <dd class="col-8">
                        @if (Model.IsClosed)
                        {
                            <span class="badge bg-secondary">已結單</span>
                        }
                        else
                        {
                            <span class="badge bg-success">處理中</span>
                        }
                    </dd>
                    <dt class="col-4">指派客服</dt>
                    <dd class="col-8">@(@Model.AssignedManagerId?.ToString() ?? "未指派")</dd>
                    <dt class="col-4">建立時間</dt>
                    <dd class="col-8">@Model.CreatedAt.ToString("yyyy/MM/dd HH:mm")</dd>
                    <dt class="col-4">最後訊息</dt>
                    <dd class="col-8">@((Model.LastMessageAt ?? Model.CreatedAt).ToString("yyyy/MM/dd HH:mm"))</dd>
                    @if (Model.IsClosed)
                    {
                        <dt class="col-4">結單時間</dt>
                        <dd class="col-8">@Model.ClosedAt?.ToString("yyyy/MM/dd HH:mm")</dd>
                        <dt class="col-4">結單備註</dt>
                        <dd class="col-8">@Model.CloseNote</dd>
                    }
                </dl>
                <hr />
                <div class="d-flex gap-2 flex-wrap">
                    @if (Model.CanAssignToMe)
                    {
                        <button class="btn btn-sm btn-outline-primary" id="btn-assign">指派給我</button>
                    }
                    @if (Model.CanReassign)
                    {
                        <a class="btn btn-sm btn-outline-warning" href="@Url.Action("Reassign", new { id = Model.TicketId })">轉單</a>
                    }
                    @if (Model.CanClose)
                    {
                        <a class="btn btn-sm btn-outline-danger" href="@Url.Action("CloseForm", new { id = Model.TicketId })">結單</a>
                    }
                </div>
            </div>
        </div>

        <!-- 詳細資料（指派紀錄） -->
        <div class="card shadow-sm detail-card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <strong>詳細資料</strong>
                <div class="d-flex gap-2">
                    <a class="btn btn-sm btn-outline-secondary"
                       href="@Url.Action("AssignmentHistoryPage", "Support", new { area = "social_hub", id = Model.TicketId })">
                        完整歷史
                    </a>
                    <button type="button" class="btn btn-sm btn-outline-secondary" id="btn-refresh-assign">重新整理</button>
                </div>
            </div>
            <div class="card-body" id="assign-history">
                <div class="text-muted">載入中…</div>
            </div>
        </div>
    </div>

    <!-- 右：聊天區（固定高度） -->
    <div class="col-12 col-lg-8">
        <div class="card shadow-sm chat-card">
            <div class="card-header">
                <strong>對話紀錄</strong>
            </div>
            <div class="card-body" id="message-host">
                @await Html.PartialAsync("_MessageList", Model.Messages)
            </div>

            @* ✅ 只有「未結單 且 已指派給我」才顯示輸入框；其餘顯示提示 *@
            @if (!Model.IsClosed && Model.AssignedManagerId == Model.MeManagerId)
            {
                <div class="card-footer">
                    @await Html.PartialAsync("_Composer", Model.TicketId)
                </div>
            }
            else
            {
                <div class="card-footer">
                    @if (Model.IsClosed)
                    {
                        <div class="alert alert-secondary mb-0 py-2">此工單已結單，無法回覆。</div>
                    }
                    else if (Model.AssignedManagerId == null)
                    {
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="alert alert-warning mb-0 py-2 flex-grow-1 me-2">
                                尚未指派客服。請先指派後再回覆。
                            </div>
                            @if (Model.CanAssignToMe)
                            {
                                <button class="btn btn-sm btn-outline-primary" id="btn-assign">指派給我</button>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info mb-0 py-2">
                            目前由客服 <strong>@Model.AssignedManagerId</strong> 負責；你僅能檢視。如需接手，請使用「轉單」或請對方轉派。
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const TICKET_ID = @Model.TicketId;
        let assignPage = 1;

        function scrollMessagesToBottom() {
            const host = document.getElementById('message-host');
            if (!host) return;
            host.scrollTop = host.scrollHeight;
        }

        async function reloadMessages(page = 1, keepTop = false) {
            const res = await fetch(`/social_hub/Support/MessageList?id=${TICKET_ID}&page=${page}`, {
                headers: { 'X-Requested-With': 'XMLHttpRequest' },
                credentials: 'same-origin'
            });
            const html = await res.text();
            const host = document.getElementById('message-host');
            host.innerHTML = html;
            if (!keepTop) scrollMessagesToBottom();
        }

        async function loadAssignHistory(page = 1) {
            const host = document.getElementById('assign-history');
            try {
                const res = await fetch(`/social_hub/Support/AssignmentHistory?id=${TICKET_ID}&page=${page}`, {
                    headers: { 'X-Requested-With': 'XMLHttpRequest' },
                    credentials: 'same-origin'
                });
                host.innerHTML = await res.text();
                assignPage = page;
            } catch (e) {
                host.innerHTML = `<div class="alert alert-danger mb-0">載入失敗，請重試。</div>`;
                console.error(e);
            }
        }

        // 左側：指派紀錄分頁
        document.addEventListener('click', async (e) => {
            const a = e.target.closest('#assign-history a.page-link');
            if (a) {
                e.preventDefault();
                const page = parseInt(new URL(a.href).searchParams.get('page') || '1', 10);
                await loadAssignHistory(page);
                return;
            }
        });

        // 送出訊息
        document.addEventListener('click', async (e) => {
            if (e.target && e.target.id === 'btn-send') {
                const ta = document.getElementById('msg-text');
                const text = (ta.value || '').trim();
                if (!text) return;

                const fd = new FormData();
                fd.append('text', text);

                const res = await fetch(`/social_hub/Support/SendMessage?id=${TICKET_ID}`, {
                    method: 'POST', body: fd, credentials: 'same-origin'
                });

                if (res.ok) {
                    ta.value = '';
                    await reloadMessages(1);
                } else {
                    alert('送出失敗：' + (await res.text()));
                }
            }
        });

        // 指派給我
        document.addEventListener('click', async (e) => {
            if (e.target && e.target.id === 'btn-assign') {
                const res = await fetch(`/social_hub/Support/AssignToMe?id=${TICKET_ID}`, {
                    method: 'POST', credentials: 'same-origin'
                });
                if (res.ok) location.reload();
                else alert(await res.text());
            }
        });

        // 詳細資料刷新
        document.getElementById('btn-refresh-assign').addEventListener('click', () => loadAssignHistory(assignPage));

        // 初始載入
        document.addEventListener('DOMContentLoaded', () => {
            scrollMessagesToBottom();
            loadAssignHistory(1);
        });
    </script>
}
