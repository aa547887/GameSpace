@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@using Microsoft.EntityFrameworkCore
@using GameSpace.Models
@inject GameSpace.Models.GameSpacedatabaseContext Db

@{
    // 以後台方案嘗試取登入者（你專案一直用 "AdminCookie"）
    var auth = await Context.AuthenticateAsync("AdminCookie");
    var p = auth?.Principal ?? User;

    // 預設（未登入）導到前台首頁
    var brandArea = "";
    var brandController = "Home";
    var brandAction = "Index";

    // 若已登入（或你想限定管理員則加上 IsManager 判斷）
    if (p?.Identity?.IsAuthenticated == true /* &&
        p.HasClaim(c => c.Type == "IsManager" && c.Value == "true") */)
    {
        brandController = "Login";
        brandAction = "Success";   // ← 改成登入成功畫面
        brandArea = "";            // Success 在最外層
    }
}

<nav class="navbar navbar-expand-lg navbar-dark shadow-sm custom-bg-dark">
    <div class="container-fluid p-0 d-flex">

        <!-- 左側品牌 -->
        <div class="d-flex justify-content-center align-items-center flex-shrink-0" style="width:250px; height:100%;">
            <a class="navbar-brand mb-0 text-white" href="@Url.Action(brandAction, brandController, new { area = brandArea })">GamiPort</a>
        </div>

        @{
            // 1) 先決定要用哪個 Principal（與 Sidebar 一致）
            var adminAuth = await Context.AuthenticateAsync("AdminCookie");
            var principal =
            (User?.Identity?.IsAuthenticated == true && User.HasClaim(c => c.Type == "IsManager" && c.Value == "true"))
            ? User
            : (adminAuth?.Principal ?? User);

            bool isAuthed = principal?.Identity?.IsAuthenticated == true;

            // 2) 取 ManagerId
            int? managerId = null;
            var idStr =
            principal?.FindFirst("ManagerId")?.Value ??
            principal?.FindFirst(ClaimTypes.NameIdentifier)?.Value ??
            principal?.FindFirst("uid")?.Value;

            if (int.TryParse(idStr, out var parsed)) managerId = parsed;

            // 2-1) Claims 讀旗標（更寬鬆，支援 true/1/yes）
            Func<ClaimsPrincipal?, string, bool> HasPerm = (pr, type) =>
            {
                if (pr == null) return false;
                var claim = pr.FindFirst(type) ?? pr.FindFirst($"perm:{type}") ?? pr.FindFirst($"Permission:{type}");
                if (claim == null) return false;
                var v = (claim.Value ?? "").Trim();
                return v.Equals("true", StringComparison.OrdinalIgnoreCase) || v == "1" || v.Equals("yes", StringComparison.OrdinalIgnoreCase);
            };

            bool hasAdmin = HasPerm(principal, "AdministratorPrivilegesManagement");
            bool hasUserStat = HasPerm(principal, "UserStatusManagement");
            bool hasShopping = HasPerm(principal, "ShoppingPermissionManagement");
            bool hasMessage = HasPerm(principal, "MessagePermissionManagement");
            bool hasPetRight = HasPerm(principal, "PetRightsManagement");
            bool hasCS = HasPerm(principal, "CustomerService");

            // 3) 如果 Claims 沒帶任何旗標，再回 DB 撈一次（ManagerRoles → ManagerRolePermissions）
            if (!(hasAdmin || hasUserStat)
            && isAuthed && managerId.HasValue)
            {
                var mid = managerId.Value;
                var flags = await Db.ManagerRolePermissions
                .Where(p => p.Managers.Any(m => m.ManagerId == mid))
                .Select(p => new
                {
                    p.AdministratorPrivilegesManagement,
                    p.UserStatusManagement,

                })
                .ToListAsync();

                hasAdmin = flags.Any(x => x.AdministratorPrivilegesManagement == true);
                hasUserStat = flags.Any(x => x.UserStatusManagement == true);
            }

            // 4) Topbar 兩個按鈕的顯示條件
            bool showMemberCenter = hasUserStat;    // 有 UserStatusManagement 才顯示「會員中心」
            bool showAdminCenter = hasAdmin;       // 有 AdministratorPrivilegesManagement 才顯示「管理者中心」

            // 顯示用資訊（右側選單）
            string? adminId = principal?.FindFirstValue("ManagerId") ?? principal?.FindFirstValue(ClaimTypes.NameIdentifier);
            string? adminName = principal?.Identity?.Name;
            var adminRoles = principal?.Claims
            .Where(c => c.Type == ClaimTypes.Role || c.Type.Equals("role", StringComparison.OrdinalIgnoreCase))
            .Select(c => (c.Value ?? "").Trim())
            .Where(v => !string.IsNullOrWhiteSpace(v))
            .Distinct()
            .ToList() ?? new List<string>();
        }

        <!-- 漢堡按鈕 -->
        <button class="navbar-toggler ms-2" type="button" data-bs-toggle="collapse" data-bs-target="#topbarNav"
                aria-controls="topbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <!-- 中間導航（水平） -->
        <div class="collapse navbar-collapse justify-content-start" id="topbarNav">
            <ul class="navbar-nav me-auto">
                @if (showMemberCenter)
                {
                    <li class="nav-item mx-2">
                        <a class="nav-link text-white"
                           asp-area="MemberManagement" asp-controller="UserIntroduces" asp-action="Index"
                           asp-route-sidebar="member">會員中心</a>
                    </li>
                }
                @if (showAdminCenter)
                {
                    <li class="nav-item mx-2">
                        <a class="nav-link text-white"
                           asp-area="MemberManagement" asp-controller="ManagerData" asp-action="Index"
                           asp-route-sidebar="admin">管理者中心</a>
                    </li>
                }
            </ul>

            <!-- 右側使用者選單 -->
            <div class="d-flex align-items-center me-3">
                @if (principal != null && principal.Identity?.IsAuthenticated == true)
                {
                    <ul class="navbar-nav">
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle text-white d-flex align-items-center" href="#"
                               id="userDropdown1" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <span class="d-none d-lg-inline me-2">@(!string.IsNullOrWhiteSpace(adminName) ? adminName : "未登入")</span>
                                <img class="img-profile rounded-circle" src="~/lib/image/undraw_profile.svg" style="width:30px; height:30px; object-fit:cover;">
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown1" style="min-width: 260px;">
                                <li><h6 class="dropdown-header">已登入</h6></li>
                                <li><span class="dropdown-item-text small text-muted"><i class="fa-solid fa-id-badge me-1"></i> ID：@adminId</span></li>
                                <li>
                                    <span class="dropdown-item-text text-muted d-flex flex-wrap align-items-center">
                                        <i class="fa-solid fa-shield-halved"></i>&nbsp;角色：
                                        @if (adminRoles.Count > 0)
                                        {
                                            foreach (var r in adminRoles)
                                            {
                                                <span class="badge text-black ms-1 mt-1">@r</span>
                                                ;
                                            }
                                        }
                                        else
                                        {

                                            <span class="text-black ms-1">（無）</span>
                                        }
                                    </span>
                                </li>
                                <li><hr class="dropdown-divider" /></li>
                                <li>
                                    <form asp-area="" asp-controller="Login" asp-action="Logout" method="post" class="px-2">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="dropdown-item text-danger">
                                            <i class="fa-solid fa-right-from-bracket me-2"></i> 登出
                                        </button>
                                    </form>
                                </li>
                            </ul>
                        </li>
                    </ul>
                }
                else
                {
                    <a asp-area="" asp-controller="Login" asp-action="Index" class="btn btn-sm btn-outline-light">
                        <i class="fa-solid fa-right-to-bracket me-1"></i> 後台登入
                    </a>
                }
            </div>
        </div>
    </div>
</nav>
