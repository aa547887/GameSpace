@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@{
    var adminAuth = await Context.AuthenticateAsync("AdminCookie");
    var adminPrincipal = adminAuth?.Principal;

    bool isBackoffice =
        (adminPrincipal?.Identity?.IsAuthenticated ?? false)
        || (User?.HasClaim(c => c.Type == "IsManager" && c.Value == "true") ?? false);

    Layout = isBackoffice ? "_LayoutAdmin" : "_Layout";
    ViewData["Title"] = "首頁";
}

<style>
    :root {
        --size: min(80vmin, 480px);
        --gap: 6px;
    }

    .puzzle-wrap {
        text-align: center;
    }

    .hint {
        opacity: .8;
        font-size: .95rem;
        margin-bottom: .75rem;
    }

    .puzzle {
        width: var(--size);
        aspect-ratio: 1 / 1;
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: var(--gap);
        background: #1a1b22;
        border-radius: 16px;
        padding: var(--gap);
        box-shadow: 0 10px 30px rgba(0,0,0,.20), inset 0 0 0 1px rgba(255,255,255,.04);
        user-select: none;
        position: relative;
        margin-inline: auto;
    }

    .piece {
        border-radius: 12px;
        background-image: url("@Url.Content("~/picture/home.jpg")"); /* ← 換成你的圖片 */
        background-size: 300% 300%;
        background-repeat: no-repeat;
        background-color: #111418;
        box-shadow: inset 0 0 0 1px rgba(255,255,255,.06);
        transform: translateY(-14px) scale(.98);
        opacity: 0;
        filter: blur(3px);
        transition: transform .45s cubic-bezier(.2,.7,.2,1), opacity .45s, filter .45s;
    }

        .piece.show {
            transform: translateY(0) scale(1);
            opacity: 1;
            filter: blur(0);
        }

    .overlay {
        position: absolute;
        inset: 0;
        display: grid;
        place-items: center;
        background: linear-gradient(180deg, rgba(0,0,0,.0), rgba(0,0,0,.22));
        border-radius: 16px;
        pointer-events: none; /* 不阻擋點擊 */
        color: rgba(255,255,255,.85);
        font-weight: 600;
        letter-spacing: .02em;
    }

    /* 完成訊息 */
    .done {
        position: fixed;
        inset: 0;
        display: none;
        place-items: center;
        background: rgba(0,0,0,.55);
        padding: 24px;
        z-index: 1055; /* 蓋過 navbar/offcanvas 等 */
    }

        .done.show {
            display: grid;
        }

    .card-login {
        background: #171a21;
        color: #e8eaed;
        border-radius: 16px;
        padding: 22px 20px;
        width: min(92vw, 420px);
        text-align: center;
        box-shadow: 0 18px 60px rgba(0,0,0,.45), inset 0 0 0 1px rgba(255,255,255,.06);
        animation: pop .28s ease-out;
    }
    @@keyframes pop {
        from

    {
        transform: scale(.96);
        opacity: 0;
    }

    to {
        transform: scale(1);
        opacity: 1;
    }

    }

    .card-login h2 {
        margin: 0 0 10px;
        font-size: 1.25rem;
    }

    .card-login p {
        margin: 0 0 16px;
        opacity: .9;
    }
</style>

<div class="container py-4 text-center">
    <h1 class="mb-4">歡迎來到 GamiPort 後台系統</h1>

    <!-- 拼圖區塊 -->
    <div id="puzzleWrap" class="puzzle-wrap my-4">
        
        <div id="puzzle" class="puzzle" aria-label="拼圖 3x3"></div>
        <div class="overlay"></div>
    </div>
    <div class="hint">點一下拼圖區域，開始遊戲</div>
</div>

<!-- 完成提示（全站共用即可） -->
<div id="done" class="done" role="dialog" aria-modal="true" aria-labelledby="doneTitle">
    <div class="card-login">
        <h2 id="doneTitle">🎉 恭喜你完成了拼圖</h2>
        <p>請點擊按鈕繼續</p>
        <!-- 依你的路由調整為實際登入頁 -->
        <a class="btn btn-primary"  asp-action="Index">確認</a>
    </div>
</div>

@section Scripts {
    <script>
        (function () {
            const GRID = 3;                    // 3x3
            const TOTAL = GRID * GRID;         // 9 片
            const puzzle = document.getElementById("puzzle");
            const overlay = document.querySelector("#puzzleWrap .overlay");
            const done = document.getElementById("done");
            const wrap = document.getElementById("puzzleWrap");

            // 生成 9 片拼圖（依格子定位 background-position）
            for (let i = 0; i < TOTAL; i++) {
                const r = Math.floor(i / GRID);
                const c = i % GRID;
                const d = document.createElement("div");
                d.className = "piece";
                d.style.backgroundPosition = `${c * 50}% ${r * 50}%`; // 0/50/100%
                puzzle.appendChild(d);
            }
            const pieces = Array.from(document.querySelectorAll(".piece"));
            let idx = 0;

            function dropNextPiece(evt) {
                // 若點的是登入按鈕或彈窗內元素，跳過
                if (evt?.target?.closest && (evt.target.closest(".btn") || evt.target.closest("#done"))) return;

                if (idx < pieces.length) {
                    pieces[idx].classList.add("show");
                    idx++;
                    overlay.style.display = "none";
                    if (idx === pieces.length) {
                        wrap.removeEventListener("click", dropNextPiece, true);
                        setTimeout(() => {
                            done.classList.add("show");
                            done.querySelector(".btn")?.focus();
                        }, 320);
                    }
                }
            }

            // 只綁在拼圖容器，避免影響其他頁面操作
            wrap.addEventListener("click", dropNextPiece, true);

            // 鍵盤輔助（Enter/Space）
            wrap.addEventListener("keydown", (e) => {
                if (e.code === "Enter" || e.code === "Space") {
                    e.preventDefault();
                    dropNextPiece(e);
                }
            });
        })();
    </script>
}
