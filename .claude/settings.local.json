{
  "permissions": {
    "allow": [
      "Bash(dotnet build:*)",
      "Bash(Select-String -Pattern \"error|warning|Build succeeded|Build FAILED\" -Context 0,2)",
      "Bash(git commit:*)",
      "Bash(grep:*)",
      "Bash(for:*)",
      "Bash(do sed -i 's/using GameSpace\\.Data;/using GameSpace.Models;/' \"$file\")",
      "Bash(done)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(Select-String -Pattern \"error|warning\" -Context 0,2)",
      "Bash(do sed -i 's/using GameSpace\\.Areas\\.MiniGame\\.Data;/using GameSpace.Models;/' \"$file\")",
      "Bash(cat:*)",
      "Bash(Get-Content \"C:\\Users\\n2029\\Desktop\\GameSpace\\audit_remaining\")",
      "Bash(sqlcmd:*)",
      "mcp__ide__getDiagnostics",
      "Bash(Out-File -FilePath \"C:\\Users\\n2029\\Desktop\\GameSpace\\build_output.txt\" -Encoding utf8)",
      "Bash(Select-String \"error\")",
      "Bash(Group-Object)",
      "Bash(Sort-Object Count -Descending)",
      "Bash(powershell:*)",
      "Bash(tee:*)",
      "Bash(if [ -f todo.md ])",
      "Bash(then cat todo.md)",
      "Bash(else echo \"檔案不存在，將建立新檔案\")",
      "Bash(fi)",
      "Bash(Test-Path \"C:\\Users\\n2029\\Desktop\\GameSpace\\GameSpace\\GameSpace\\Areas\\MiniGame\\Models\\ViewModels\\PermissionViewModels.cs\")",
      "Bash(Select-Object -First 50)",
      "Bash(Select-String -Pattern \"error|warning\")",
      "Bash(Select-Object -First 30)"
    ],
    "deny": [],
    "ask": []
  }
}
